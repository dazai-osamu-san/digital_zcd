ARM GAS  /tmp/ccqKuAuV.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB261:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include "stdint.h"
  25:Core/Src/main.c **** #include "arm_math.h"
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
ARM GAS  /tmp/ccqKuAuV.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** #define BUFFER_SIZE 2048
  36:Core/Src/main.c **** #define NUM_TAPS 311
  37:Core/Src/main.c **** #define FS 8000
  38:Core/Src/main.c **** uint16_t adcBuffer[BUFFER_SIZE];
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** static float32_t inputF32[BUFFER_SIZE];
  41:Core/Src/main.c **** static float32_t outputF32[BUFFER_SIZE];
  42:Core/Src/main.c **** static float32_t firStateF32[BUFFER_SIZE + NUM_TAPS - 1];
  43:Core/Src/main.c **** static float32_t fftOutput[BUFFER_SIZE];
  44:Core/Src/main.c **** static float32_t fftMag[BUFFER_SIZE / 2]; 
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** arm_fir_instance_f32 S;
  47:Core/Src/main.c **** arm_rfft_fast_instance_f32 S_RFFT;
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** static float32_t firCoeffs32[NUM_TAPS] = {
  50:Core/Src/main.c ****     -0.000051,
  51:Core/Src/main.c ****     -0.000041,
  52:Core/Src/main.c ****     -0.000031,
  53:Core/Src/main.c ****     -0.000021,
  54:Core/Src/main.c ****     -0.000011,
  55:Core/Src/main.c ****     0.000000,
  56:Core/Src/main.c ****     0.000011,
  57:Core/Src/main.c ****     0.000023,
  58:Core/Src/main.c ****     0.000035,
  59:Core/Src/main.c ****     0.000047,
  60:Core/Src/main.c ****     0.000061,
  61:Core/Src/main.c ****     0.000074,
  62:Core/Src/main.c ****     0.000088,
  63:Core/Src/main.c ****     0.000103,
  64:Core/Src/main.c ****     0.000119,
  65:Core/Src/main.c ****     0.000135,
  66:Core/Src/main.c ****     0.000152,
  67:Core/Src/main.c ****     0.000169,
  68:Core/Src/main.c ****     0.000186,
  69:Core/Src/main.c ****     0.000205,
  70:Core/Src/main.c ****     0.000223,
  71:Core/Src/main.c ****     0.000242,
  72:Core/Src/main.c ****     0.000262,
  73:Core/Src/main.c ****     0.000281,
  74:Core/Src/main.c ****     0.000301,
  75:Core/Src/main.c ****     0.000320,
  76:Core/Src/main.c ****     0.000340,
  77:Core/Src/main.c ****     0.000359,
  78:Core/Src/main.c ****     0.000378,
  79:Core/Src/main.c ****     0.000396,
  80:Core/Src/main.c ****     0.000413,
  81:Core/Src/main.c ****     0.000429,
  82:Core/Src/main.c ****     0.000444,
  83:Core/Src/main.c ****     0.000458,
  84:Core/Src/main.c ****     0.000470,
  85:Core/Src/main.c ****     0.000481,
  86:Core/Src/main.c ****     0.000489,
  87:Core/Src/main.c ****     0.000496,
  88:Core/Src/main.c ****     0.000499,
ARM GAS  /tmp/ccqKuAuV.s 			page 3


  89:Core/Src/main.c ****     0.000500,
  90:Core/Src/main.c ****     0.000499,
  91:Core/Src/main.c ****     0.000494,
  92:Core/Src/main.c ****     0.000486,
  93:Core/Src/main.c ****     0.000474,
  94:Core/Src/main.c ****     0.000458,
  95:Core/Src/main.c ****     0.000439,
  96:Core/Src/main.c ****     0.000415,
  97:Core/Src/main.c ****     0.000388,
  98:Core/Src/main.c ****     0.000355,
  99:Core/Src/main.c ****     0.000319,
 100:Core/Src/main.c ****     0.000277,
 101:Core/Src/main.c ****     0.000231,
 102:Core/Src/main.c ****     0.000181,
 103:Core/Src/main.c ****     0.000125,
 104:Core/Src/main.c ****     0.000065,
 105:Core/Src/main.c ****     -0.000000,
 106:Core/Src/main.c ****     -0.000070,
 107:Core/Src/main.c ****     -0.000144,
 108:Core/Src/main.c ****     -0.000223,
 109:Core/Src/main.c ****     -0.000306,
 110:Core/Src/main.c ****     -0.000393,
 111:Core/Src/main.c ****     -0.000484,
 112:Core/Src/main.c ****     -0.000579,
 113:Core/Src/main.c ****     -0.000677,
 114:Core/Src/main.c ****     -0.000778,
 115:Core/Src/main.c ****     -0.000881,
 116:Core/Src/main.c ****     -0.000987,
 117:Core/Src/main.c ****     -0.001095,
 118:Core/Src/main.c ****     -0.001203,
 119:Core/Src/main.c ****     -0.001313,
 120:Core/Src/main.c ****     -0.001422,
 121:Core/Src/main.c ****     -0.001532,
 122:Core/Src/main.c ****     -0.001640,
 123:Core/Src/main.c ****     -0.001746,
 124:Core/Src/main.c ****     -0.001851,
 125:Core/Src/main.c ****     -0.001952,
 126:Core/Src/main.c ****     -0.002049,
 127:Core/Src/main.c ****     -0.002142,
 128:Core/Src/main.c ****     -0.002230,
 129:Core/Src/main.c ****     -0.002312,
 130:Core/Src/main.c ****     -0.002387,
 131:Core/Src/main.c ****     -0.002454,
 132:Core/Src/main.c ****     -0.002513,
 133:Core/Src/main.c ****     -0.002563,
 134:Core/Src/main.c ****     -0.002603,
 135:Core/Src/main.c ****     -0.002632,
 136:Core/Src/main.c ****     -0.002650,
 137:Core/Src/main.c ****     -0.002655,
 138:Core/Src/main.c ****     -0.002648,
 139:Core/Src/main.c ****     -0.002627,
 140:Core/Src/main.c ****     -0.002592,
 141:Core/Src/main.c ****     -0.002541,
 142:Core/Src/main.c ****     -0.002475,
 143:Core/Src/main.c ****     -0.002393,
 144:Core/Src/main.c ****     -0.002294,
 145:Core/Src/main.c ****     -0.002178,
ARM GAS  /tmp/ccqKuAuV.s 			page 4


 146:Core/Src/main.c ****     -0.002045,
 147:Core/Src/main.c ****     -0.001893,
 148:Core/Src/main.c ****     -0.001722,
 149:Core/Src/main.c ****     -0.001534,
 150:Core/Src/main.c ****     -0.001326,
 151:Core/Src/main.c ****     -0.001099,
 152:Core/Src/main.c ****     -0.000853,
 153:Core/Src/main.c ****     -0.000588,
 154:Core/Src/main.c ****     -0.000303,
 155:Core/Src/main.c ****     0.000000,
 156:Core/Src/main.c ****     0.000322,
 157:Core/Src/main.c ****     0.000663,
 158:Core/Src/main.c ****     0.001022,
 159:Core/Src/main.c ****     0.001399,
 160:Core/Src/main.c ****     0.001793,
 161:Core/Src/main.c ****     0.002204,
 162:Core/Src/main.c ****     0.002631,
 163:Core/Src/main.c ****     0.003073,
 164:Core/Src/main.c ****     0.003530,
 165:Core/Src/main.c ****     0.004001,
 166:Core/Src/main.c ****     0.004485,
 167:Core/Src/main.c ****     0.004981,
 168:Core/Src/main.c ****     0.005488,
 169:Core/Src/main.c ****     0.006004,
 170:Core/Src/main.c ****     0.006530,
 171:Core/Src/main.c ****     0.007063,
 172:Core/Src/main.c ****     0.007602,
 173:Core/Src/main.c ****     0.008146,
 174:Core/Src/main.c ****     0.008693,
 175:Core/Src/main.c ****     0.009243,
 176:Core/Src/main.c ****     0.009794,
 177:Core/Src/main.c ****     0.010344,
 178:Core/Src/main.c ****     0.010892,
 179:Core/Src/main.c ****     0.011436,
 180:Core/Src/main.c ****     0.011976,
 181:Core/Src/main.c ****     0.012509,
 182:Core/Src/main.c ****     0.013034,
 183:Core/Src/main.c ****     0.013550,
 184:Core/Src/main.c ****     0.014054,
 185:Core/Src/main.c ****     0.014547,
 186:Core/Src/main.c ****     0.015026,
 187:Core/Src/main.c ****     0.015489,
 188:Core/Src/main.c ****     0.015937,
 189:Core/Src/main.c ****     0.016366,
 190:Core/Src/main.c ****     0.016776,
 191:Core/Src/main.c ****     0.017167,
 192:Core/Src/main.c ****     0.017535,
 193:Core/Src/main.c ****     0.017881,
 194:Core/Src/main.c ****     0.018204,
 195:Core/Src/main.c ****     0.018501,
 196:Core/Src/main.c ****     0.018774,
 197:Core/Src/main.c ****     0.019020,
 198:Core/Src/main.c ****     0.019238,
 199:Core/Src/main.c ****     0.019429,
 200:Core/Src/main.c ****     0.019592,
 201:Core/Src/main.c ****     0.019726,
 202:Core/Src/main.c ****     0.019830,
ARM GAS  /tmp/ccqKuAuV.s 			page 5


 203:Core/Src/main.c ****     0.019905,
 204:Core/Src/main.c ****     0.019950,
 205:Core/Src/main.c ****     0.019965,
 206:Core/Src/main.c ****     0.019950,
 207:Core/Src/main.c ****     0.019905,
 208:Core/Src/main.c ****     0.019830,
 209:Core/Src/main.c ****     0.019726,
 210:Core/Src/main.c ****     0.019592,
 211:Core/Src/main.c ****     0.019429,
 212:Core/Src/main.c ****     0.019238,
 213:Core/Src/main.c ****     0.019020,
 214:Core/Src/main.c ****     0.018774,
 215:Core/Src/main.c ****     0.018501,
 216:Core/Src/main.c ****     0.018204,
 217:Core/Src/main.c ****     0.017881,
 218:Core/Src/main.c ****     0.017535,
 219:Core/Src/main.c ****     0.017167,
 220:Core/Src/main.c ****     0.016776,
 221:Core/Src/main.c ****     0.016366,
 222:Core/Src/main.c ****     0.015937,
 223:Core/Src/main.c ****     0.015489,
 224:Core/Src/main.c ****     0.015026,
 225:Core/Src/main.c ****     0.014547,
 226:Core/Src/main.c ****     0.014054,
 227:Core/Src/main.c ****     0.013550,
 228:Core/Src/main.c ****     0.013034,
 229:Core/Src/main.c ****     0.012509,
 230:Core/Src/main.c ****     0.011976,
 231:Core/Src/main.c ****     0.011436,
 232:Core/Src/main.c ****     0.010892,
 233:Core/Src/main.c ****     0.010344,
 234:Core/Src/main.c ****     0.009794,
 235:Core/Src/main.c ****     0.009243,
 236:Core/Src/main.c ****     0.008693,
 237:Core/Src/main.c ****     0.008146,
 238:Core/Src/main.c ****     0.007602,
 239:Core/Src/main.c ****     0.007063,
 240:Core/Src/main.c ****     0.006530,
 241:Core/Src/main.c ****     0.006004,
 242:Core/Src/main.c ****     0.005488,
 243:Core/Src/main.c ****     0.004981,
 244:Core/Src/main.c ****     0.004485,
 245:Core/Src/main.c ****     0.004001,
 246:Core/Src/main.c ****     0.003530,
 247:Core/Src/main.c ****     0.003073,
 248:Core/Src/main.c ****     0.002631,
 249:Core/Src/main.c ****     0.002204,
 250:Core/Src/main.c ****     0.001793,
 251:Core/Src/main.c ****     0.001399,
 252:Core/Src/main.c ****     0.001022,
 253:Core/Src/main.c ****     0.000663,
 254:Core/Src/main.c ****     0.000322,
 255:Core/Src/main.c ****     0.000000,
 256:Core/Src/main.c ****     -0.000303,
 257:Core/Src/main.c ****     -0.000588,
 258:Core/Src/main.c ****     -0.000853,
 259:Core/Src/main.c ****     -0.001099,
ARM GAS  /tmp/ccqKuAuV.s 			page 6


 260:Core/Src/main.c ****     -0.001326,
 261:Core/Src/main.c ****     -0.001534,
 262:Core/Src/main.c ****     -0.001722,
 263:Core/Src/main.c ****     -0.001893,
 264:Core/Src/main.c ****     -0.002045,
 265:Core/Src/main.c ****     -0.002178,
 266:Core/Src/main.c ****     -0.002294,
 267:Core/Src/main.c ****     -0.002393,
 268:Core/Src/main.c ****     -0.002475,
 269:Core/Src/main.c ****     -0.002541,
 270:Core/Src/main.c ****     -0.002592,
 271:Core/Src/main.c ****     -0.002627,
 272:Core/Src/main.c ****     -0.002648,
 273:Core/Src/main.c ****     -0.002655,
 274:Core/Src/main.c ****     -0.002650,
 275:Core/Src/main.c ****     -0.002632,
 276:Core/Src/main.c ****     -0.002603,
 277:Core/Src/main.c ****     -0.002563,
 278:Core/Src/main.c ****     -0.002513,
 279:Core/Src/main.c ****     -0.002454,
 280:Core/Src/main.c ****     -0.002387,
 281:Core/Src/main.c ****     -0.002312,
 282:Core/Src/main.c ****     -0.002230,
 283:Core/Src/main.c ****     -0.002142,
 284:Core/Src/main.c ****     -0.002049,
 285:Core/Src/main.c ****     -0.001952,
 286:Core/Src/main.c ****     -0.001851,
 287:Core/Src/main.c ****     -0.001746,
 288:Core/Src/main.c ****     -0.001640,
 289:Core/Src/main.c ****     -0.001532,
 290:Core/Src/main.c ****     -0.001422,
 291:Core/Src/main.c ****     -0.001313,
 292:Core/Src/main.c ****     -0.001203,
 293:Core/Src/main.c ****     -0.001095,
 294:Core/Src/main.c ****     -0.000987,
 295:Core/Src/main.c ****     -0.000881,
 296:Core/Src/main.c ****     -0.000778,
 297:Core/Src/main.c ****     -0.000677,
 298:Core/Src/main.c ****     -0.000579,
 299:Core/Src/main.c ****     -0.000484,
 300:Core/Src/main.c ****     -0.000393,
 301:Core/Src/main.c ****     -0.000306,
 302:Core/Src/main.c ****     -0.000223,
 303:Core/Src/main.c ****     -0.000144,
 304:Core/Src/main.c ****     -0.000070,
 305:Core/Src/main.c ****     -0.000000,
 306:Core/Src/main.c ****     0.000065,
 307:Core/Src/main.c ****     0.000125,
 308:Core/Src/main.c ****     0.000181,
 309:Core/Src/main.c ****     0.000231,
 310:Core/Src/main.c ****     0.000277,
 311:Core/Src/main.c ****     0.000319,
 312:Core/Src/main.c ****     0.000355,
 313:Core/Src/main.c ****     0.000388,
 314:Core/Src/main.c ****     0.000415,
 315:Core/Src/main.c ****     0.000439,
 316:Core/Src/main.c ****     0.000458,
ARM GAS  /tmp/ccqKuAuV.s 			page 7


 317:Core/Src/main.c ****     0.000474,
 318:Core/Src/main.c ****     0.000486,
 319:Core/Src/main.c ****     0.000494,
 320:Core/Src/main.c ****     0.000499,
 321:Core/Src/main.c ****     0.000500,
 322:Core/Src/main.c ****     0.000499,
 323:Core/Src/main.c ****     0.000496,
 324:Core/Src/main.c ****     0.000489,
 325:Core/Src/main.c ****     0.000481,
 326:Core/Src/main.c ****     0.000470,
 327:Core/Src/main.c ****     0.000458,
 328:Core/Src/main.c ****     0.000444,
 329:Core/Src/main.c ****     0.000429,
 330:Core/Src/main.c ****     0.000413,
 331:Core/Src/main.c ****     0.000396,
 332:Core/Src/main.c ****     0.000378,
 333:Core/Src/main.c ****     0.000359,
 334:Core/Src/main.c ****     0.000340,
 335:Core/Src/main.c ****     0.000320,
 336:Core/Src/main.c ****     0.000301,
 337:Core/Src/main.c ****     0.000281,
 338:Core/Src/main.c ****     0.000262,
 339:Core/Src/main.c ****     0.000242,
 340:Core/Src/main.c ****     0.000223,
 341:Core/Src/main.c ****     0.000205,
 342:Core/Src/main.c ****     0.000186,
 343:Core/Src/main.c ****     0.000169,
 344:Core/Src/main.c ****     0.000152,
 345:Core/Src/main.c ****     0.000135,
 346:Core/Src/main.c ****     0.000119,
 347:Core/Src/main.c ****     0.000103,
 348:Core/Src/main.c ****     0.000088,
 349:Core/Src/main.c ****     0.000074,
 350:Core/Src/main.c ****     0.000061,
 351:Core/Src/main.c ****     0.000047,
 352:Core/Src/main.c ****     0.000035,
 353:Core/Src/main.c ****     0.000023,
 354:Core/Src/main.c ****     0.000011,
 355:Core/Src/main.c ****     0.000000,
 356:Core/Src/main.c ****     -0.000011,
 357:Core/Src/main.c ****     -0.000021,
 358:Core/Src/main.c ****     -0.000031,
 359:Core/Src/main.c ****     -0.000041,
 360:Core/Src/main.c ****     -0.000051
 361:Core/Src/main.c **** };
 362:Core/Src/main.c **** /* USER CODE END PD */
 363:Core/Src/main.c **** 
 364:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
 365:Core/Src/main.c **** /* USER CODE BEGIN PM */
 366:Core/Src/main.c **** 
 367:Core/Src/main.c **** /* USER CODE END PM */
 368:Core/Src/main.c **** 
 369:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
 370:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
 371:Core/Src/main.c **** DMA_HandleTypeDef hdma_adc1;
 372:Core/Src/main.c **** 
 373:Core/Src/main.c **** TIM_HandleTypeDef htim2;
ARM GAS  /tmp/ccqKuAuV.s 			page 8


 374:Core/Src/main.c **** 
 375:Core/Src/main.c **** UART_HandleTypeDef huart1;
 376:Core/Src/main.c **** 
 377:Core/Src/main.c **** /* USER CODE BEGIN PV */
 378:Core/Src/main.c **** 
 379:Core/Src/main.c **** /* USER CODE END PV */
 380:Core/Src/main.c **** 
 381:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 382:Core/Src/main.c **** void SystemClock_Config(void);
 383:Core/Src/main.c **** static void MX_GPIO_Init(void);
 384:Core/Src/main.c **** static void MX_DMA_Init(void);
 385:Core/Src/main.c **** static void MX_ADC1_Init(void);
 386:Core/Src/main.c **** static void MX_TIM2_Init(void);
 387:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
 388:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 389:Core/Src/main.c **** 
 390:Core/Src/main.c **** /* USER CODE END PFP */
 391:Core/Src/main.c **** 
 392:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 393:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 394:Core/Src/main.c **** void processData(void){
 395:Core/Src/main.c ****     // Convert ADC data to float32_t
 396:Core/Src/main.c ****     for (uint32_t i = 0; i < BUFFER_SIZE; i++)
 397:Core/Src/main.c ****     {
 398:Core/Src/main.c ****         inputF32[i] = (float32_t)adcBuffer[i];
 399:Core/Src/main.c ****     }
 400:Core/Src/main.c **** 
 401:Core/Src/main.c ****     // Apply FIR filter
 402:Core/Src/main.c ****     arm_fir_f32(&S, inputF32, outputF32, BUFFER_SIZE);
 403:Core/Src/main.c **** 
 404:Core/Src/main.c ****     // Remove DC bias
 405:Core/Src/main.c ****     float32_t meanValue;
 406:Core/Src/main.c ****     arm_mean_f32(outputF32, BUFFER_SIZE, &meanValue);
 407:Core/Src/main.c ****     for (uint32_t i = 0; i < BUFFER_SIZE; i++)
 408:Core/Src/main.c ****     {
 409:Core/Src/main.c ****         outputF32[i] -= meanValue;
 410:Core/Src/main.c ****     }
 411:Core/Src/main.c **** 
 412:Core/Src/main.c ****     // Perform FFT
 413:Core/Src/main.c ****     arm_rfft_fast_f32(&S_RFFT, outputF32, fftOutput, 0);
 414:Core/Src/main.c **** 
 415:Core/Src/main.c ****     // Compute magnitude of FFT
 416:Core/Src/main.c ****     arm_cmplx_mag_f32(fftOutput, fftMag, BUFFER_SIZE / 2);
 417:Core/Src/main.c **** 
 418:Core/Src/main.c ****     // Find the peak frequency
 419:Core/Src/main.c ****     float32_t maxValue;
 420:Core/Src/main.c ****     uint32_t maxIndex;
 421:Core/Src/main.c ****     arm_max_f32(fftMag, BUFFER_SIZE / 2, &maxValue, &maxIndex);
 422:Core/Src/main.c **** 
 423:Core/Src/main.c ****     // Calculate frequency resolution
 424:Core/Src/main.c ****     float32_t frequencyResolution = (float32_t)FS / (float32_t)BUFFER_SIZE;
 425:Core/Src/main.c **** 
 426:Core/Src/main.c ****     // Calculate peak frequency
 427:Core/Src/main.c ****     float32_t peakFrequency = frequencyResolution * (float32_t)maxIndex;
 428:Core/Src/main.c **** 
 429:Core/Src/main.c ****     // Send peak frequency over UART
 430:Core/Src/main.c ****     char msg[50];
ARM GAS  /tmp/ccqKuAuV.s 			page 9


 431:Core/Src/main.c ****     snprintf(msg, sizeof(msg), "Peak Frequency: %.2f Hz\r\n", peakFrequency);
 432:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 433:Core/Src/main.c **** } 
 434:Core/Src/main.c **** 
 435:Core/Src/main.c **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc){
 436:Core/Src/main.c ****   processData();
 437:Core/Src/main.c **** }
 438:Core/Src/main.c **** 
 439:Core/Src/main.c **** /* USER CODE END 0 */
 440:Core/Src/main.c **** 
 441:Core/Src/main.c **** /**
 442:Core/Src/main.c ****   * @brief  The application entry point.
 443:Core/Src/main.c ****   * @retval int
 444:Core/Src/main.c ****   */
 445:Core/Src/main.c **** int main(void)
 446:Core/Src/main.c **** {
 447:Core/Src/main.c **** 
 448:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 449:Core/Src/main.c **** 
 450:Core/Src/main.c ****   /* USER CODE END 1 */
 451:Core/Src/main.c **** 
 452:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 453:Core/Src/main.c **** 
 454:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 455:Core/Src/main.c ****   HAL_Init();
 456:Core/Src/main.c **** 
 457:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 458:Core/Src/main.c **** 
 459:Core/Src/main.c ****   /* USER CODE END Init */
 460:Core/Src/main.c **** 
 461:Core/Src/main.c ****   /* Configure the system clock */
 462:Core/Src/main.c ****   SystemClock_Config();
 463:Core/Src/main.c **** 
 464:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 465:Core/Src/main.c **** 
 466:Core/Src/main.c ****   /* USER CODE END SysInit */
 467:Core/Src/main.c **** 
 468:Core/Src/main.c ****   /* Initialize all configured peripherals */
 469:Core/Src/main.c ****   MX_GPIO_Init();
 470:Core/Src/main.c ****   MX_DMA_Init();
 471:Core/Src/main.c ****   MX_ADC1_Init();
 472:Core/Src/main.c ****   MX_TIM2_Init();
 473:Core/Src/main.c ****   MX_USART1_UART_Init();
 474:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 475:Core/Src/main.c **** 
 476:Core/Src/main.c ****   arm_fir_init_f32(&S, NUM_TAPS, firCoeffs32, firStateF32, BUFFER_SIZE);
 477:Core/Src/main.c ****   arm_rfft_fast_init_f32(&S_RFFT, BUFFER_SIZE);
 478:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim2);
 479:Core/Src/main.c ****   HAL_ADC_Start_DMA(&hadc1, (uint32_t*)adcBuffer, BUFFER_SIZE);
 480:Core/Src/main.c ****   /* USER CODE END 2 */
 481:Core/Src/main.c **** 
 482:Core/Src/main.c ****   /* Infinite loop */
 483:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 484:Core/Src/main.c ****   while (1)
 485:Core/Src/main.c ****   {
 486:Core/Src/main.c ****     /* USER CODE END WHILE */
 487:Core/Src/main.c **** 
ARM GAS  /tmp/ccqKuAuV.s 			page 10


 488:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 489:Core/Src/main.c ****   }
 490:Core/Src/main.c ****   /* USER CODE END 3 */
 491:Core/Src/main.c **** }
 492:Core/Src/main.c **** 
 493:Core/Src/main.c **** /**
 494:Core/Src/main.c ****   * @brief System Clock Configuration
 495:Core/Src/main.c ****   * @retval None
 496:Core/Src/main.c ****   */
 497:Core/Src/main.c **** void SystemClock_Config(void)
 498:Core/Src/main.c **** {
 499:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 500:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 501:Core/Src/main.c **** 
 502:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 503:Core/Src/main.c ****   */
 504:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 505:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 506:Core/Src/main.c **** 
 507:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 508:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 509:Core/Src/main.c ****   */
 510:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 511:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 512:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 513:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 514:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 515:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 516:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 517:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 518:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 519:Core/Src/main.c ****   {
 520:Core/Src/main.c ****     Error_Handler();
 521:Core/Src/main.c ****   }
 522:Core/Src/main.c **** 
 523:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 524:Core/Src/main.c ****   */
 525:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 526:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 527:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 528:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 529:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 530:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 531:Core/Src/main.c **** 
 532:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 533:Core/Src/main.c ****   {
 534:Core/Src/main.c ****     Error_Handler();
 535:Core/Src/main.c ****   }
 536:Core/Src/main.c **** }
 537:Core/Src/main.c **** 
 538:Core/Src/main.c **** /**
 539:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 540:Core/Src/main.c ****   * @param None
 541:Core/Src/main.c ****   * @retval None
 542:Core/Src/main.c ****   */
 543:Core/Src/main.c **** static void MX_ADC1_Init(void)
 544:Core/Src/main.c **** {
ARM GAS  /tmp/ccqKuAuV.s 			page 11


 545:Core/Src/main.c **** 
 546:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 547:Core/Src/main.c **** 
 548:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 549:Core/Src/main.c **** 
 550:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 551:Core/Src/main.c **** 
 552:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 553:Core/Src/main.c **** 
 554:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 555:Core/Src/main.c **** 
 556:Core/Src/main.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
 557:Core/Src/main.c ****   */
 558:Core/Src/main.c ****   hadc1.Instance = ADC1;
 559:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 560:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 561:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 562:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 563:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 564:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
 565:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T2_TRGO;
 566:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 567:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 568:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 569:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 570:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 571:Core/Src/main.c ****   {
 572:Core/Src/main.c ****     Error_Handler();
 573:Core/Src/main.c ****   }
 574:Core/Src/main.c **** 
 575:Core/Src/main.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 576:Core/Src/main.c ****   */
 577:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_8;
 578:Core/Src/main.c ****   sConfig.Rank = 1;
 579:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 580:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 581:Core/Src/main.c ****   {
 582:Core/Src/main.c ****     Error_Handler();
 583:Core/Src/main.c ****   }
 584:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 585:Core/Src/main.c **** 
 586:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 587:Core/Src/main.c **** 
 588:Core/Src/main.c **** }
 589:Core/Src/main.c **** 
 590:Core/Src/main.c **** /**
 591:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 592:Core/Src/main.c ****   * @param None
 593:Core/Src/main.c ****   * @retval None
 594:Core/Src/main.c ****   */
 595:Core/Src/main.c **** static void MX_TIM2_Init(void)
 596:Core/Src/main.c **** {
 597:Core/Src/main.c **** 
 598:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 599:Core/Src/main.c **** 
 600:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 601:Core/Src/main.c **** 
ARM GAS  /tmp/ccqKuAuV.s 			page 12


 602:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 603:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 604:Core/Src/main.c **** 
 605:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 606:Core/Src/main.c **** 
 607:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 608:Core/Src/main.c ****   htim2.Instance = TIM2;
 609:Core/Src/main.c ****   htim2.Init.Prescaler = 20-1;
 610:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 611:Core/Src/main.c ****   htim2.Init.Period = 525-1;
 612:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 613:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 614:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 615:Core/Src/main.c ****   {
 616:Core/Src/main.c ****     Error_Handler();
 617:Core/Src/main.c ****   }
 618:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 619:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 620:Core/Src/main.c ****   {
 621:Core/Src/main.c ****     Error_Handler();
 622:Core/Src/main.c ****   }
 623:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 624:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 625:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 626:Core/Src/main.c ****   {
 627:Core/Src/main.c ****     Error_Handler();
 628:Core/Src/main.c ****   }
 629:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 630:Core/Src/main.c **** 
 631:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 632:Core/Src/main.c **** 
 633:Core/Src/main.c **** }
 634:Core/Src/main.c **** 
 635:Core/Src/main.c **** /**
 636:Core/Src/main.c ****   * @brief USART1 Initialization Function
 637:Core/Src/main.c ****   * @param None
 638:Core/Src/main.c ****   * @retval None
 639:Core/Src/main.c ****   */
 640:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 641:Core/Src/main.c **** {
 642:Core/Src/main.c **** 
 643:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 644:Core/Src/main.c **** 
 645:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 646:Core/Src/main.c **** 
 647:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 648:Core/Src/main.c **** 
 649:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 650:Core/Src/main.c ****   huart1.Instance = USART1;
 651:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 652:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 653:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 654:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 655:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 656:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 657:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 658:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
ARM GAS  /tmp/ccqKuAuV.s 			page 13


 659:Core/Src/main.c ****   {
 660:Core/Src/main.c ****     Error_Handler();
 661:Core/Src/main.c ****   }
 662:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 663:Core/Src/main.c **** 
 664:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 665:Core/Src/main.c **** 
 666:Core/Src/main.c **** }
 667:Core/Src/main.c **** 
 668:Core/Src/main.c **** /**
 669:Core/Src/main.c ****   * Enable DMA controller clock
 670:Core/Src/main.c ****   */
 671:Core/Src/main.c **** static void MX_DMA_Init(void)
 672:Core/Src/main.c **** {
 673:Core/Src/main.c **** 
 674:Core/Src/main.c ****   /* DMA controller clock enable */
 675:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 676:Core/Src/main.c **** 
 677:Core/Src/main.c ****   /* DMA interrupt init */
 678:Core/Src/main.c ****   /* DMA2_Stream0_IRQn interrupt configuration */
 679:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 0, 0);
 680:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 681:Core/Src/main.c **** 
 682:Core/Src/main.c **** }
 683:Core/Src/main.c **** 
 684:Core/Src/main.c **** /**
 685:Core/Src/main.c ****   * @brief GPIO Initialization Function
 686:Core/Src/main.c ****   * @param None
 687:Core/Src/main.c ****   * @retval None
 688:Core/Src/main.c ****   */
 689:Core/Src/main.c **** static void MX_GPIO_Init(void)
 690:Core/Src/main.c **** {
  28              		.loc 1 690 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 16
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 84B0     		sub	sp, sp, #16
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 16
 691:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 692:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 693:Core/Src/main.c **** 
 694:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 695:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  36              		.loc 1 695 3 view .LVU1
  37              	.LBB4:
  38              		.loc 1 695 3 view .LVU2
  39 0002 0022     		movs	r2, #0
  40 0004 0192     		str	r2, [sp, #4]
  41              		.loc 1 695 3 view .LVU3
  42 0006 104B     		ldr	r3, .L3
  43 0008 196B     		ldr	r1, [r3, #48]
  44 000a 41F08001 		orr	r1, r1, #128
  45 000e 1963     		str	r1, [r3, #48]
  46              		.loc 1 695 3 view .LVU4
  47 0010 196B     		ldr	r1, [r3, #48]
ARM GAS  /tmp/ccqKuAuV.s 			page 14


  48 0012 01F08001 		and	r1, r1, #128
  49 0016 0191     		str	r1, [sp, #4]
  50              		.loc 1 695 3 view .LVU5
  51 0018 0199     		ldr	r1, [sp, #4]
  52              	.LBE4:
  53              		.loc 1 695 3 view .LVU6
 696:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  54              		.loc 1 696 3 view .LVU7
  55              	.LBB5:
  56              		.loc 1 696 3 view .LVU8
  57 001a 0292     		str	r2, [sp, #8]
  58              		.loc 1 696 3 view .LVU9
  59 001c 196B     		ldr	r1, [r3, #48]
  60 001e 41F00201 		orr	r1, r1, #2
  61 0022 1963     		str	r1, [r3, #48]
  62              		.loc 1 696 3 view .LVU10
  63 0024 196B     		ldr	r1, [r3, #48]
  64 0026 01F00201 		and	r1, r1, #2
  65 002a 0291     		str	r1, [sp, #8]
  66              		.loc 1 696 3 view .LVU11
  67 002c 0299     		ldr	r1, [sp, #8]
  68              	.LBE5:
  69              		.loc 1 696 3 view .LVU12
 697:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  70              		.loc 1 697 3 view .LVU13
  71              	.LBB6:
  72              		.loc 1 697 3 view .LVU14
  73 002e 0392     		str	r2, [sp, #12]
  74              		.loc 1 697 3 view .LVU15
  75 0030 1A6B     		ldr	r2, [r3, #48]
  76 0032 42F00102 		orr	r2, r2, #1
  77 0036 1A63     		str	r2, [r3, #48]
  78              		.loc 1 697 3 view .LVU16
  79 0038 1B6B     		ldr	r3, [r3, #48]
  80 003a 03F00103 		and	r3, r3, #1
  81 003e 0393     		str	r3, [sp, #12]
  82              		.loc 1 697 3 view .LVU17
  83 0040 039B     		ldr	r3, [sp, #12]
  84              	.LBE6:
  85              		.loc 1 697 3 view .LVU18
 698:Core/Src/main.c **** 
 699:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 700:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 701:Core/Src/main.c **** }
  86              		.loc 1 701 1 is_stmt 0 view .LVU19
  87 0042 04B0     		add	sp, sp, #16
  88              	.LCFI1:
  89              		.cfi_def_cfa_offset 0
  90              		@ sp needed
  91 0044 7047     		bx	lr
  92              	.L4:
  93 0046 00BF     		.align	2
  94              	.L3:
  95 0048 00380240 		.word	1073887232
  96              		.cfi_endproc
  97              	.LFE261:
  99              		.section	.text.MX_DMA_Init,"ax",%progbits
ARM GAS  /tmp/ccqKuAuV.s 			page 15


 100              		.align	1
 101              		.syntax unified
 102              		.thumb
 103              		.thumb_func
 105              	MX_DMA_Init:
 106              	.LFB260:
 672:Core/Src/main.c **** 
 107              		.loc 1 672 1 is_stmt 1 view -0
 108              		.cfi_startproc
 109              		@ args = 0, pretend = 0, frame = 8
 110              		@ frame_needed = 0, uses_anonymous_args = 0
 111 0000 00B5     		push	{lr}
 112              	.LCFI2:
 113              		.cfi_def_cfa_offset 4
 114              		.cfi_offset 14, -4
 115 0002 83B0     		sub	sp, sp, #12
 116              	.LCFI3:
 117              		.cfi_def_cfa_offset 16
 675:Core/Src/main.c **** 
 118              		.loc 1 675 3 view .LVU21
 119              	.LBB7:
 675:Core/Src/main.c **** 
 120              		.loc 1 675 3 view .LVU22
 121 0004 0021     		movs	r1, #0
 122 0006 0191     		str	r1, [sp, #4]
 675:Core/Src/main.c **** 
 123              		.loc 1 675 3 view .LVU23
 124 0008 094B     		ldr	r3, .L7
 125 000a 1A6B     		ldr	r2, [r3, #48]
 126 000c 42F48002 		orr	r2, r2, #4194304
 127 0010 1A63     		str	r2, [r3, #48]
 675:Core/Src/main.c **** 
 128              		.loc 1 675 3 view .LVU24
 129 0012 1B6B     		ldr	r3, [r3, #48]
 130 0014 03F48003 		and	r3, r3, #4194304
 131 0018 0193     		str	r3, [sp, #4]
 675:Core/Src/main.c **** 
 132              		.loc 1 675 3 view .LVU25
 133 001a 019B     		ldr	r3, [sp, #4]
 134              	.LBE7:
 675:Core/Src/main.c **** 
 135              		.loc 1 675 3 view .LVU26
 679:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 136              		.loc 1 679 3 view .LVU27
 137 001c 0A46     		mov	r2, r1
 138 001e 3820     		movs	r0, #56
 139 0020 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 140              	.LVL0:
 680:Core/Src/main.c **** 
 141              		.loc 1 680 3 view .LVU28
 142 0024 3820     		movs	r0, #56
 143 0026 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 144              	.LVL1:
 682:Core/Src/main.c **** 
 145              		.loc 1 682 1 is_stmt 0 view .LVU29
 146 002a 03B0     		add	sp, sp, #12
 147              	.LCFI4:
ARM GAS  /tmp/ccqKuAuV.s 			page 16


 148              		.cfi_def_cfa_offset 4
 149              		@ sp needed
 150 002c 5DF804FB 		ldr	pc, [sp], #4
 151              	.L8:
 152              		.align	2
 153              	.L7:
 154 0030 00380240 		.word	1073887232
 155              		.cfi_endproc
 156              	.LFE260:
 158              		.section	.rodata.processData.str1.4,"aMS",%progbits,1
 159              		.align	2
 160              	.LC0:
 161 0000 5065616B 		.ascii	"Peak Frequency: %.2f Hz\015\012\000"
 161      20467265 
 161      7175656E 
 161      63793A20 
 161      252E3266 
 162              		.global	__aeabi_f2d
 163              		.section	.text.processData,"ax",%progbits
 164              		.align	1
 165              		.global	processData
 166              		.syntax unified
 167              		.thumb
 168              		.thumb_func
 170              	processData:
 171              	.LFB253:
 394:Core/Src/main.c ****     // Convert ADC data to float32_t
 172              		.loc 1 394 23 is_stmt 1 view -0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 64
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176 0000 30B5     		push	{r4, r5, lr}
 177              	.LCFI5:
 178              		.cfi_def_cfa_offset 12
 179              		.cfi_offset 4, -12
 180              		.cfi_offset 5, -8
 181              		.cfi_offset 14, -4
 182 0002 93B0     		sub	sp, sp, #76
 183              	.LCFI6:
 184              		.cfi_def_cfa_offset 88
 396:Core/Src/main.c ****     {
 185              		.loc 1 396 5 view .LVU31
 186              	.LBB8:
 396:Core/Src/main.c ****     {
 187              		.loc 1 396 10 view .LVU32
 188              	.LVL2:
 396:Core/Src/main.c ****     {
 189              		.loc 1 396 19 is_stmt 0 view .LVU33
 190 0004 0023     		movs	r3, #0
 396:Core/Src/main.c ****     {
 191              		.loc 1 396 5 view .LVU34
 192 0006 0CE0     		b	.L10
 193              	.LVL3:
 194              	.L11:
 398:Core/Src/main.c ****     }
 195              		.loc 1 398 9 is_stmt 1 discriminator 3 view .LVU35
 398:Core/Src/main.c ****     }
ARM GAS  /tmp/ccqKuAuV.s 			page 17


 196              		.loc 1 398 43 is_stmt 0 discriminator 3 view .LVU36
 197 0008 314A     		ldr	r2, .L15
 198 000a 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 199 000e 07EE902A 		vmov	s15, r2	@ int
 398:Core/Src/main.c ****     }
 200              		.loc 1 398 23 discriminator 3 view .LVU37
 201 0012 F8EE677A 		vcvt.f32.u32	s15, s15
 398:Core/Src/main.c ****     }
 202              		.loc 1 398 21 discriminator 3 view .LVU38
 203 0016 2F4A     		ldr	r2, .L15+4
 204 0018 02EB8302 		add	r2, r2, r3, lsl #2
 205 001c C2ED007A 		vstr.32	s15, [r2]
 396:Core/Src/main.c ****     {
 206              		.loc 1 396 44 is_stmt 1 discriminator 3 view .LVU39
 207 0020 0133     		adds	r3, r3, #1
 208              	.LVL4:
 209              	.L10:
 396:Core/Src/main.c ****     {
 210              		.loc 1 396 28 discriminator 1 view .LVU40
 211 0022 B3F5006F 		cmp	r3, #2048
 212 0026 EFD3     		bcc	.L11
 213              	.LBE8:
 402:Core/Src/main.c **** 
 214              		.loc 1 402 5 view .LVU41
 215 0028 2B4C     		ldr	r4, .L15+8
 216 002a 4FF40063 		mov	r3, #2048
 217              	.LVL5:
 402:Core/Src/main.c **** 
 218              		.loc 1 402 5 is_stmt 0 view .LVU42
 219 002e 2246     		mov	r2, r4
 220 0030 2849     		ldr	r1, .L15+4
 221 0032 2A48     		ldr	r0, .L15+12
 222 0034 FFF7FEFF 		bl	arm_fir_f32
 223              	.LVL6:
 405:Core/Src/main.c ****     arm_mean_f32(outputF32, BUFFER_SIZE, &meanValue);
 224              		.loc 1 405 5 is_stmt 1 view .LVU43
 406:Core/Src/main.c ****     for (uint32_t i = 0; i < BUFFER_SIZE; i++)
 225              		.loc 1 406 5 view .LVU44
 226 0038 11AA     		add	r2, sp, #68
 227 003a 4FF40061 		mov	r1, #2048
 228 003e 2046     		mov	r0, r4
 229 0040 FFF7FEFF 		bl	arm_mean_f32
 230              	.LVL7:
 407:Core/Src/main.c ****     {
 231              		.loc 1 407 5 view .LVU45
 232              	.LBB9:
 407:Core/Src/main.c ****     {
 233              		.loc 1 407 10 view .LVU46
 407:Core/Src/main.c ****     {
 234              		.loc 1 407 19 is_stmt 0 view .LVU47
 235 0044 0022     		movs	r2, #0
 407:Core/Src/main.c ****     {
 236              		.loc 1 407 5 view .LVU48
 237 0046 0BE0     		b	.L12
 238              	.LVL8:
 239              	.L13:
 409:Core/Src/main.c ****     }
ARM GAS  /tmp/ccqKuAuV.s 			page 18


 240              		.loc 1 409 9 is_stmt 1 discriminator 3 view .LVU49
 409:Core/Src/main.c ****     }
 241              		.loc 1 409 18 is_stmt 0 discriminator 3 view .LVU50
 242 0048 234B     		ldr	r3, .L15+8
 243 004a 03EB8203 		add	r3, r3, r2, lsl #2
 244 004e D3ED007A 		vldr.32	s15, [r3]
 409:Core/Src/main.c ****     }
 245              		.loc 1 409 22 discriminator 3 view .LVU51
 246 0052 9DED117A 		vldr.32	s14, [sp, #68]
 247 0056 77EEC77A 		vsub.f32	s15, s15, s14
 248 005a C3ED007A 		vstr.32	s15, [r3]
 407:Core/Src/main.c ****     {
 249              		.loc 1 407 44 is_stmt 1 discriminator 3 view .LVU52
 250 005e 0132     		adds	r2, r2, #1
 251              	.LVL9:
 252              	.L12:
 407:Core/Src/main.c ****     {
 253              		.loc 1 407 28 discriminator 1 view .LVU53
 254 0060 B2F5006F 		cmp	r2, #2048
 255 0064 F0D3     		bcc	.L13
 256              	.LBE9:
 413:Core/Src/main.c **** 
 257              		.loc 1 413 5 view .LVU54
 258 0066 1E4D     		ldr	r5, .L15+16
 259 0068 0023     		movs	r3, #0
 260 006a 2A46     		mov	r2, r5
 261              	.LVL10:
 413:Core/Src/main.c **** 
 262              		.loc 1 413 5 is_stmt 0 view .LVU55
 263 006c 1A49     		ldr	r1, .L15+8
 264 006e 1D48     		ldr	r0, .L15+20
 265 0070 FFF7FEFF 		bl	arm_rfft_fast_f32
 266              	.LVL11:
 416:Core/Src/main.c **** 
 267              		.loc 1 416 5 is_stmt 1 view .LVU56
 268 0074 1C4C     		ldr	r4, .L15+24
 269 0076 4FF48062 		mov	r2, #1024
 270 007a 2146     		mov	r1, r4
 271 007c 2846     		mov	r0, r5
 272 007e FFF7FEFF 		bl	arm_cmplx_mag_f32
 273              	.LVL12:
 419:Core/Src/main.c ****     uint32_t maxIndex;
 274              		.loc 1 419 5 view .LVU57
 420:Core/Src/main.c ****     arm_max_f32(fftMag, BUFFER_SIZE / 2, &maxValue, &maxIndex);
 275              		.loc 1 420 5 view .LVU58
 421:Core/Src/main.c **** 
 276              		.loc 1 421 5 view .LVU59
 277 0082 0FAB     		add	r3, sp, #60
 278 0084 10AA     		add	r2, sp, #64
 279 0086 4FF48061 		mov	r1, #1024
 280 008a 2046     		mov	r0, r4
 281 008c FFF7FEFF 		bl	arm_max_f32
 282              	.LVL13:
 424:Core/Src/main.c **** 
 283              		.loc 1 424 5 view .LVU60
 427:Core/Src/main.c **** 
 284              		.loc 1 427 5 view .LVU61
ARM GAS  /tmp/ccqKuAuV.s 			page 19


 427:Core/Src/main.c **** 
 285              		.loc 1 427 53 is_stmt 0 view .LVU62
 286 0090 DDED0F7A 		vldr.32	s15, [sp, #60]	@ int
 287 0094 F8EE677A 		vcvt.f32.u32	s15, s15
 288              	.LVL14:
 430:Core/Src/main.c ****     snprintf(msg, sizeof(msg), "Peak Frequency: %.2f Hz\r\n", peakFrequency);
 289              		.loc 1 430 5 is_stmt 1 view .LVU63
 431:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 290              		.loc 1 431 5 view .LVU64
 291 0098 9FED147A 		vldr.32	s14, .L15+28
 292 009c 67EE877A 		vmul.f32	s15, s15, s14
 293              	.LVL15:
 431:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 294              		.loc 1 431 5 is_stmt 0 view .LVU65
 295 00a0 17EE900A 		vmov	r0, s15
 296 00a4 FFF7FEFF 		bl	__aeabi_f2d
 297              	.LVL16:
 431:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 298              		.loc 1 431 5 view .LVU66
 299 00a8 CDE90001 		strd	r0, [sp]
 300 00ac 104A     		ldr	r2, .L15+32
 301 00ae 3221     		movs	r1, #50
 302 00b0 02A8     		add	r0, sp, #8
 303 00b2 FFF7FEFF 		bl	snprintf
 304              	.LVL17:
 432:Core/Src/main.c **** } 
 305              		.loc 1 432 5 is_stmt 1 view .LVU67
 432:Core/Src/main.c **** } 
 306              		.loc 1 432 47 is_stmt 0 view .LVU68
 307 00b6 02A8     		add	r0, sp, #8
 308 00b8 FFF7FEFF 		bl	strlen
 309              	.LVL18:
 432:Core/Src/main.c **** } 
 310              		.loc 1 432 5 view .LVU69
 311 00bc 4FF0FF33 		mov	r3, #-1
 312 00c0 82B2     		uxth	r2, r0
 313 00c2 02A9     		add	r1, sp, #8
 314 00c4 0B48     		ldr	r0, .L15+36
 315 00c6 FFF7FEFF 		bl	HAL_UART_Transmit
 316              	.LVL19:
 433:Core/Src/main.c **** 
 317              		.loc 1 433 1 view .LVU70
 318 00ca 13B0     		add	sp, sp, #76
 319              	.LCFI7:
 320              		.cfi_def_cfa_offset 12
 321              		@ sp needed
 322 00cc 30BD     		pop	{r4, r5, pc}
 323              	.L16:
 324 00ce 00BF     		.align	2
 325              	.L15:
 326 00d0 00000000 		.word	adcBuffer
 327 00d4 00000000 		.word	inputF32
 328 00d8 00000000 		.word	outputF32
 329 00dc 00000000 		.word	S
 330 00e0 00000000 		.word	fftOutput
 331 00e4 00000000 		.word	S_RFFT
 332 00e8 00000000 		.word	fftMag
ARM GAS  /tmp/ccqKuAuV.s 			page 20


 333 00ec 00007A40 		.word	1081737216
 334 00f0 00000000 		.word	.LC0
 335 00f4 00000000 		.word	huart1
 336              		.cfi_endproc
 337              	.LFE253:
 339              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 340              		.align	1
 341              		.global	HAL_ADC_ConvCpltCallback
 342              		.syntax unified
 343              		.thumb
 344              		.thumb_func
 346              	HAL_ADC_ConvCpltCallback:
 347              	.LVL20:
 348              	.LFB254:
 435:Core/Src/main.c ****   processData();
 349              		.loc 1 435 55 is_stmt 1 view -0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 435:Core/Src/main.c ****   processData();
 353              		.loc 1 435 55 is_stmt 0 view .LVU72
 354 0000 08B5     		push	{r3, lr}
 355              	.LCFI8:
 356              		.cfi_def_cfa_offset 8
 357              		.cfi_offset 3, -8
 358              		.cfi_offset 14, -4
 436:Core/Src/main.c **** }
 359              		.loc 1 436 3 is_stmt 1 view .LVU73
 360 0002 FFF7FEFF 		bl	processData
 361              	.LVL21:
 437:Core/Src/main.c **** 
 362              		.loc 1 437 1 is_stmt 0 view .LVU74
 363 0006 08BD     		pop	{r3, pc}
 364              		.cfi_endproc
 365              	.LFE254:
 367              		.section	.text.Error_Handler,"ax",%progbits
 368              		.align	1
 369              		.global	Error_Handler
 370              		.syntax unified
 371              		.thumb
 372              		.thumb_func
 374              	Error_Handler:
 375              	.LFB262:
 702:Core/Src/main.c **** 
 703:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 704:Core/Src/main.c **** 
 705:Core/Src/main.c **** /* USER CODE END 4 */
 706:Core/Src/main.c **** 
 707:Core/Src/main.c **** /**
 708:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 709:Core/Src/main.c ****   * @retval None
 710:Core/Src/main.c ****   */
 711:Core/Src/main.c **** void Error_Handler(void)
 712:Core/Src/main.c **** {
 376              		.loc 1 712 1 is_stmt 1 view -0
 377              		.cfi_startproc
 378              		@ Volatile: function does not return.
ARM GAS  /tmp/ccqKuAuV.s 			page 21


 379              		@ args = 0, pretend = 0, frame = 0
 380              		@ frame_needed = 0, uses_anonymous_args = 0
 381              		@ link register save eliminated.
 713:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 714:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 715:Core/Src/main.c ****   __disable_irq();
 382              		.loc 1 715 3 view .LVU76
 383              	.LBB10:
 384              	.LBI10:
 385              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
ARM GAS  /tmp/ccqKuAuV.s 			page 22


  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  /tmp/ccqKuAuV.s 			page 23


 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
ARM GAS  /tmp/ccqKuAuV.s 			page 24


 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  /tmp/ccqKuAuV.s 			page 25


 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccqKuAuV.s 			page 26


 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccqKuAuV.s 			page 27


 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
ARM GAS  /tmp/ccqKuAuV.s 			page 28


 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccqKuAuV.s 			page 29


 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
ARM GAS  /tmp/ccqKuAuV.s 			page 30


 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccqKuAuV.s 			page 31


 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
ARM GAS  /tmp/ccqKuAuV.s 			page 32


 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
ARM GAS  /tmp/ccqKuAuV.s 			page 33


 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccqKuAuV.s 			page 34


 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
ARM GAS  /tmp/ccqKuAuV.s 			page 35


 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
ARM GAS  /tmp/ccqKuAuV.s 			page 36


 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
ARM GAS  /tmp/ccqKuAuV.s 			page 37


 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccqKuAuV.s 			page 38


 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 386              		.loc 2 960 27 view .LVU77
 387              	.LBB11:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 388              		.loc 2 962 3 view .LVU78
 389              		.syntax unified
 390              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 391 0000 72B6     		cpsid i
 392              	@ 0 "" 2
 393              		.thumb
 394              		.syntax unified
 395              	.L20:
 396              	.LBE11:
 397              	.LBE10:
 716:Core/Src/main.c ****   while (1)
 398              		.loc 1 716 3 discriminator 1 view .LVU79
 717:Core/Src/main.c ****   {
 718:Core/Src/main.c ****   }
 399              		.loc 1 718 3 discriminator 1 view .LVU80
 716:Core/Src/main.c ****   while (1)
 400              		.loc 1 716 9 discriminator 1 view .LVU81
 401 0002 FEE7     		b	.L20
 402              		.cfi_endproc
 403              	.LFE262:
 405              		.section	.text.MX_ADC1_Init,"ax",%progbits
 406              		.align	1
 407              		.syntax unified
 408              		.thumb
 409              		.thumb_func
 411              	MX_ADC1_Init:
 412              	.LFB257:
 544:Core/Src/main.c **** 
 413              		.loc 1 544 1 view -0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 16
 416              		@ frame_needed = 0, uses_anonymous_args = 0
 417 0000 00B5     		push	{lr}
 418              	.LCFI9:
 419              		.cfi_def_cfa_offset 4
 420              		.cfi_offset 14, -4
 421 0002 85B0     		sub	sp, sp, #20
 422              	.LCFI10:
 423              		.cfi_def_cfa_offset 24
 550:Core/Src/main.c **** 
 424              		.loc 1 550 3 view .LVU83
 550:Core/Src/main.c **** 
 425              		.loc 1 550 26 is_stmt 0 view .LVU84
 426 0004 0023     		movs	r3, #0
 427 0006 0093     		str	r3, [sp]
 428 0008 0193     		str	r3, [sp, #4]
 429 000a 0293     		str	r3, [sp, #8]
 430 000c 0393     		str	r3, [sp, #12]
 558:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 431              		.loc 1 558 3 is_stmt 1 view .LVU85
 558:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 432              		.loc 1 558 18 is_stmt 0 view .LVU86
ARM GAS  /tmp/ccqKuAuV.s 			page 39


 433 000e 1648     		ldr	r0, .L27
 434 0010 164A     		ldr	r2, .L27+4
 435 0012 0260     		str	r2, [r0]
 559:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 436              		.loc 1 559 3 is_stmt 1 view .LVU87
 559:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 437              		.loc 1 559 29 is_stmt 0 view .LVU88
 438 0014 4FF48032 		mov	r2, #65536
 439 0018 4260     		str	r2, [r0, #4]
 560:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 440              		.loc 1 560 3 is_stmt 1 view .LVU89
 560:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 441              		.loc 1 560 25 is_stmt 0 view .LVU90
 442 001a 8360     		str	r3, [r0, #8]
 561:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 443              		.loc 1 561 3 is_stmt 1 view .LVU91
 561:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 444              		.loc 1 561 27 is_stmt 0 view .LVU92
 445 001c 0361     		str	r3, [r0, #16]
 562:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 446              		.loc 1 562 3 is_stmt 1 view .LVU93
 562:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 447              		.loc 1 562 33 is_stmt 0 view .LVU94
 448 001e 0376     		strb	r3, [r0, #24]
 563:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
 449              		.loc 1 563 3 is_stmt 1 view .LVU95
 563:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
 450              		.loc 1 563 36 is_stmt 0 view .LVU96
 451 0020 80F82030 		strb	r3, [r0, #32]
 564:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T2_TRGO;
 452              		.loc 1 564 3 is_stmt 1 view .LVU97
 564:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T2_TRGO;
 453              		.loc 1 564 35 is_stmt 0 view .LVU98
 454 0024 4FF08052 		mov	r2, #268435456
 455 0028 C262     		str	r2, [r0, #44]
 565:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 456              		.loc 1 565 3 is_stmt 1 view .LVU99
 565:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 457              		.loc 1 565 31 is_stmt 0 view .LVU100
 458 002a 4FF0C062 		mov	r2, #100663296
 459 002e 8262     		str	r2, [r0, #40]
 566:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 460              		.loc 1 566 3 is_stmt 1 view .LVU101
 566:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 461              		.loc 1 566 24 is_stmt 0 view .LVU102
 462 0030 C360     		str	r3, [r0, #12]
 567:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 463              		.loc 1 567 3 is_stmt 1 view .LVU103
 567:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 464              		.loc 1 567 30 is_stmt 0 view .LVU104
 465 0032 0123     		movs	r3, #1
 466 0034 C361     		str	r3, [r0, #28]
 568:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 467              		.loc 1 568 3 is_stmt 1 view .LVU105
 568:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 468              		.loc 1 568 36 is_stmt 0 view .LVU106
 469 0036 80F83030 		strb	r3, [r0, #48]
ARM GAS  /tmp/ccqKuAuV.s 			page 40


 569:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 470              		.loc 1 569 3 is_stmt 1 view .LVU107
 569:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 471              		.loc 1 569 27 is_stmt 0 view .LVU108
 472 003a 4361     		str	r3, [r0, #20]
 570:Core/Src/main.c ****   {
 473              		.loc 1 570 3 is_stmt 1 view .LVU109
 570:Core/Src/main.c ****   {
 474              		.loc 1 570 7 is_stmt 0 view .LVU110
 475 003c FFF7FEFF 		bl	HAL_ADC_Init
 476              	.LVL22:
 570:Core/Src/main.c ****   {
 477              		.loc 1 570 6 view .LVU111
 478 0040 68B9     		cbnz	r0, .L25
 577:Core/Src/main.c ****   sConfig.Rank = 1;
 479              		.loc 1 577 3 is_stmt 1 view .LVU112
 577:Core/Src/main.c ****   sConfig.Rank = 1;
 480              		.loc 1 577 19 is_stmt 0 view .LVU113
 481 0042 0823     		movs	r3, #8
 482 0044 0093     		str	r3, [sp]
 578:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 483              		.loc 1 578 3 is_stmt 1 view .LVU114
 578:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 484              		.loc 1 578 16 is_stmt 0 view .LVU115
 485 0046 0123     		movs	r3, #1
 486 0048 0193     		str	r3, [sp, #4]
 579:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 487              		.loc 1 579 3 is_stmt 1 view .LVU116
 579:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 488              		.loc 1 579 24 is_stmt 0 view .LVU117
 489 004a 0023     		movs	r3, #0
 490 004c 0293     		str	r3, [sp, #8]
 580:Core/Src/main.c ****   {
 491              		.loc 1 580 3 is_stmt 1 view .LVU118
 580:Core/Src/main.c ****   {
 492              		.loc 1 580 7 is_stmt 0 view .LVU119
 493 004e 6946     		mov	r1, sp
 494 0050 0548     		ldr	r0, .L27
 495 0052 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 496              	.LVL23:
 580:Core/Src/main.c ****   {
 497              		.loc 1 580 6 view .LVU120
 498 0056 20B9     		cbnz	r0, .L26
 588:Core/Src/main.c **** 
 499              		.loc 1 588 1 view .LVU121
 500 0058 05B0     		add	sp, sp, #20
 501              	.LCFI11:
 502              		.cfi_remember_state
 503              		.cfi_def_cfa_offset 4
 504              		@ sp needed
 505 005a 5DF804FB 		ldr	pc, [sp], #4
 506              	.L25:
 507              	.LCFI12:
 508              		.cfi_restore_state
 572:Core/Src/main.c ****   }
 509              		.loc 1 572 5 is_stmt 1 view .LVU122
 510 005e FFF7FEFF 		bl	Error_Handler
ARM GAS  /tmp/ccqKuAuV.s 			page 41


 511              	.LVL24:
 512              	.L26:
 582:Core/Src/main.c ****   }
 513              		.loc 1 582 5 view .LVU123
 514 0062 FFF7FEFF 		bl	Error_Handler
 515              	.LVL25:
 516              	.L28:
 517 0066 00BF     		.align	2
 518              	.L27:
 519 0068 00000000 		.word	hadc1
 520 006c 00200140 		.word	1073815552
 521              		.cfi_endproc
 522              	.LFE257:
 524              		.section	.text.MX_TIM2_Init,"ax",%progbits
 525              		.align	1
 526              		.syntax unified
 527              		.thumb
 528              		.thumb_func
 530              	MX_TIM2_Init:
 531              	.LFB258:
 596:Core/Src/main.c **** 
 532              		.loc 1 596 1 view -0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 24
 535              		@ frame_needed = 0, uses_anonymous_args = 0
 536 0000 00B5     		push	{lr}
 537              	.LCFI13:
 538              		.cfi_def_cfa_offset 4
 539              		.cfi_offset 14, -4
 540 0002 87B0     		sub	sp, sp, #28
 541              	.LCFI14:
 542              		.cfi_def_cfa_offset 32
 602:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 543              		.loc 1 602 3 view .LVU125
 602:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 544              		.loc 1 602 26 is_stmt 0 view .LVU126
 545 0004 0023     		movs	r3, #0
 546 0006 0293     		str	r3, [sp, #8]
 547 0008 0393     		str	r3, [sp, #12]
 548 000a 0493     		str	r3, [sp, #16]
 549 000c 0593     		str	r3, [sp, #20]
 603:Core/Src/main.c **** 
 550              		.loc 1 603 3 is_stmt 1 view .LVU127
 603:Core/Src/main.c **** 
 551              		.loc 1 603 27 is_stmt 0 view .LVU128
 552 000e 0093     		str	r3, [sp]
 553 0010 0193     		str	r3, [sp, #4]
 608:Core/Src/main.c ****   htim2.Init.Prescaler = 20-1;
 554              		.loc 1 608 3 is_stmt 1 view .LVU129
 608:Core/Src/main.c ****   htim2.Init.Prescaler = 20-1;
 555              		.loc 1 608 18 is_stmt 0 view .LVU130
 556 0012 1448     		ldr	r0, .L37
 557 0014 4FF08042 		mov	r2, #1073741824
 558 0018 0260     		str	r2, [r0]
 609:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 559              		.loc 1 609 3 is_stmt 1 view .LVU131
 609:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
ARM GAS  /tmp/ccqKuAuV.s 			page 42


 560              		.loc 1 609 24 is_stmt 0 view .LVU132
 561 001a 1322     		movs	r2, #19
 562 001c 4260     		str	r2, [r0, #4]
 610:Core/Src/main.c ****   htim2.Init.Period = 525-1;
 563              		.loc 1 610 3 is_stmt 1 view .LVU133
 610:Core/Src/main.c ****   htim2.Init.Period = 525-1;
 564              		.loc 1 610 26 is_stmt 0 view .LVU134
 565 001e 8360     		str	r3, [r0, #8]
 611:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 566              		.loc 1 611 3 is_stmt 1 view .LVU135
 611:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 567              		.loc 1 611 21 is_stmt 0 view .LVU136
 568 0020 4FF40372 		mov	r2, #524
 569 0024 C260     		str	r2, [r0, #12]
 612:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 570              		.loc 1 612 3 is_stmt 1 view .LVU137
 612:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 571              		.loc 1 612 28 is_stmt 0 view .LVU138
 572 0026 0361     		str	r3, [r0, #16]
 613:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 573              		.loc 1 613 3 is_stmt 1 view .LVU139
 613:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 574              		.loc 1 613 32 is_stmt 0 view .LVU140
 575 0028 8361     		str	r3, [r0, #24]
 614:Core/Src/main.c ****   {
 576              		.loc 1 614 3 is_stmt 1 view .LVU141
 614:Core/Src/main.c ****   {
 577              		.loc 1 614 7 is_stmt 0 view .LVU142
 578 002a FFF7FEFF 		bl	HAL_TIM_Base_Init
 579              	.LVL26:
 614:Core/Src/main.c ****   {
 580              		.loc 1 614 6 view .LVU143
 581 002e 98B9     		cbnz	r0, .L34
 618:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 582              		.loc 1 618 3 is_stmt 1 view .LVU144
 618:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 583              		.loc 1 618 34 is_stmt 0 view .LVU145
 584 0030 4FF48053 		mov	r3, #4096
 585 0034 0293     		str	r3, [sp, #8]
 619:Core/Src/main.c ****   {
 586              		.loc 1 619 3 is_stmt 1 view .LVU146
 619:Core/Src/main.c ****   {
 587              		.loc 1 619 7 is_stmt 0 view .LVU147
 588 0036 02A9     		add	r1, sp, #8
 589 0038 0A48     		ldr	r0, .L37
 590 003a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 591              	.LVL27:
 619:Core/Src/main.c ****   {
 592              		.loc 1 619 6 view .LVU148
 593 003e 68B9     		cbnz	r0, .L35
 623:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 594              		.loc 1 623 3 is_stmt 1 view .LVU149
 623:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 595              		.loc 1 623 37 is_stmt 0 view .LVU150
 596 0040 2023     		movs	r3, #32
 597 0042 0093     		str	r3, [sp]
 624:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
ARM GAS  /tmp/ccqKuAuV.s 			page 43


 598              		.loc 1 624 3 is_stmt 1 view .LVU151
 624:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 599              		.loc 1 624 33 is_stmt 0 view .LVU152
 600 0044 0023     		movs	r3, #0
 601 0046 0193     		str	r3, [sp, #4]
 625:Core/Src/main.c ****   {
 602              		.loc 1 625 3 is_stmt 1 view .LVU153
 625:Core/Src/main.c ****   {
 603              		.loc 1 625 7 is_stmt 0 view .LVU154
 604 0048 6946     		mov	r1, sp
 605 004a 0648     		ldr	r0, .L37
 606 004c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 607              	.LVL28:
 625:Core/Src/main.c ****   {
 608              		.loc 1 625 6 view .LVU155
 609 0050 30B9     		cbnz	r0, .L36
 633:Core/Src/main.c **** 
 610              		.loc 1 633 1 view .LVU156
 611 0052 07B0     		add	sp, sp, #28
 612              	.LCFI15:
 613              		.cfi_remember_state
 614              		.cfi_def_cfa_offset 4
 615              		@ sp needed
 616 0054 5DF804FB 		ldr	pc, [sp], #4
 617              	.L34:
 618              	.LCFI16:
 619              		.cfi_restore_state
 616:Core/Src/main.c ****   }
 620              		.loc 1 616 5 is_stmt 1 view .LVU157
 621 0058 FFF7FEFF 		bl	Error_Handler
 622              	.LVL29:
 623              	.L35:
 621:Core/Src/main.c ****   }
 624              		.loc 1 621 5 view .LVU158
 625 005c FFF7FEFF 		bl	Error_Handler
 626              	.LVL30:
 627              	.L36:
 627:Core/Src/main.c ****   }
 628              		.loc 1 627 5 view .LVU159
 629 0060 FFF7FEFF 		bl	Error_Handler
 630              	.LVL31:
 631              	.L38:
 632              		.align	2
 633              	.L37:
 634 0064 00000000 		.word	htim2
 635              		.cfi_endproc
 636              	.LFE258:
 638              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 639              		.align	1
 640              		.syntax unified
 641              		.thumb
 642              		.thumb_func
 644              	MX_USART1_UART_Init:
 645              	.LFB259:
 641:Core/Src/main.c **** 
 646              		.loc 1 641 1 view -0
 647              		.cfi_startproc
ARM GAS  /tmp/ccqKuAuV.s 			page 44


 648              		@ args = 0, pretend = 0, frame = 0
 649              		@ frame_needed = 0, uses_anonymous_args = 0
 650 0000 08B5     		push	{r3, lr}
 651              	.LCFI17:
 652              		.cfi_def_cfa_offset 8
 653              		.cfi_offset 3, -8
 654              		.cfi_offset 14, -4
 650:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 655              		.loc 1 650 3 view .LVU161
 650:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 656              		.loc 1 650 19 is_stmt 0 view .LVU162
 657 0002 0A48     		ldr	r0, .L43
 658 0004 0A4B     		ldr	r3, .L43+4
 659 0006 0360     		str	r3, [r0]
 651:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 660              		.loc 1 651 3 is_stmt 1 view .LVU163
 651:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 661              		.loc 1 651 24 is_stmt 0 view .LVU164
 662 0008 4FF4E133 		mov	r3, #115200
 663 000c 4360     		str	r3, [r0, #4]
 652:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 664              		.loc 1 652 3 is_stmt 1 view .LVU165
 652:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 665              		.loc 1 652 26 is_stmt 0 view .LVU166
 666 000e 0023     		movs	r3, #0
 667 0010 8360     		str	r3, [r0, #8]
 653:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 668              		.loc 1 653 3 is_stmt 1 view .LVU167
 653:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 669              		.loc 1 653 24 is_stmt 0 view .LVU168
 670 0012 C360     		str	r3, [r0, #12]
 654:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 671              		.loc 1 654 3 is_stmt 1 view .LVU169
 654:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 672              		.loc 1 654 22 is_stmt 0 view .LVU170
 673 0014 0361     		str	r3, [r0, #16]
 655:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 674              		.loc 1 655 3 is_stmt 1 view .LVU171
 655:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 675              		.loc 1 655 20 is_stmt 0 view .LVU172
 676 0016 0C22     		movs	r2, #12
 677 0018 4261     		str	r2, [r0, #20]
 656:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 678              		.loc 1 656 3 is_stmt 1 view .LVU173
 656:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 679              		.loc 1 656 25 is_stmt 0 view .LVU174
 680 001a 8361     		str	r3, [r0, #24]
 657:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 681              		.loc 1 657 3 is_stmt 1 view .LVU175
 657:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 682              		.loc 1 657 28 is_stmt 0 view .LVU176
 683 001c C361     		str	r3, [r0, #28]
 658:Core/Src/main.c ****   {
 684              		.loc 1 658 3 is_stmt 1 view .LVU177
 658:Core/Src/main.c ****   {
 685              		.loc 1 658 7 is_stmt 0 view .LVU178
 686 001e FFF7FEFF 		bl	HAL_UART_Init
ARM GAS  /tmp/ccqKuAuV.s 			page 45


 687              	.LVL32:
 658:Core/Src/main.c ****   {
 688              		.loc 1 658 6 view .LVU179
 689 0022 00B9     		cbnz	r0, .L42
 666:Core/Src/main.c **** 
 690              		.loc 1 666 1 view .LVU180
 691 0024 08BD     		pop	{r3, pc}
 692              	.L42:
 660:Core/Src/main.c ****   }
 693              		.loc 1 660 5 is_stmt 1 view .LVU181
 694 0026 FFF7FEFF 		bl	Error_Handler
 695              	.LVL33:
 696              	.L44:
 697 002a 00BF     		.align	2
 698              	.L43:
 699 002c 00000000 		.word	huart1
 700 0030 00100140 		.word	1073811456
 701              		.cfi_endproc
 702              	.LFE259:
 704              		.section	.text.SystemClock_Config,"ax",%progbits
 705              		.align	1
 706              		.global	SystemClock_Config
 707              		.syntax unified
 708              		.thumb
 709              		.thumb_func
 711              	SystemClock_Config:
 712              	.LFB256:
 498:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 713              		.loc 1 498 1 view -0
 714              		.cfi_startproc
 715              		@ args = 0, pretend = 0, frame = 80
 716              		@ frame_needed = 0, uses_anonymous_args = 0
 717 0000 00B5     		push	{lr}
 718              	.LCFI18:
 719              		.cfi_def_cfa_offset 4
 720              		.cfi_offset 14, -4
 721 0002 95B0     		sub	sp, sp, #84
 722              	.LCFI19:
 723              		.cfi_def_cfa_offset 88
 499:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 724              		.loc 1 499 3 view .LVU183
 499:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 725              		.loc 1 499 22 is_stmt 0 view .LVU184
 726 0004 3022     		movs	r2, #48
 727 0006 0021     		movs	r1, #0
 728 0008 08A8     		add	r0, sp, #32
 729 000a FFF7FEFF 		bl	memset
 730              	.LVL34:
 500:Core/Src/main.c **** 
 731              		.loc 1 500 3 is_stmt 1 view .LVU185
 500:Core/Src/main.c **** 
 732              		.loc 1 500 22 is_stmt 0 view .LVU186
 733 000e 0023     		movs	r3, #0
 734 0010 0393     		str	r3, [sp, #12]
 735 0012 0493     		str	r3, [sp, #16]
 736 0014 0593     		str	r3, [sp, #20]
 737 0016 0693     		str	r3, [sp, #24]
ARM GAS  /tmp/ccqKuAuV.s 			page 46


 738 0018 0793     		str	r3, [sp, #28]
 504:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 739              		.loc 1 504 3 is_stmt 1 view .LVU187
 740              	.LBB12:
 504:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 741              		.loc 1 504 3 view .LVU188
 742 001a 0193     		str	r3, [sp, #4]
 504:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 743              		.loc 1 504 3 view .LVU189
 744 001c 204A     		ldr	r2, .L51
 745 001e 116C     		ldr	r1, [r2, #64]
 746 0020 41F08051 		orr	r1, r1, #268435456
 747 0024 1164     		str	r1, [r2, #64]
 504:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 748              		.loc 1 504 3 view .LVU190
 749 0026 126C     		ldr	r2, [r2, #64]
 750 0028 02F08052 		and	r2, r2, #268435456
 751 002c 0192     		str	r2, [sp, #4]
 504:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 752              		.loc 1 504 3 view .LVU191
 753 002e 019A     		ldr	r2, [sp, #4]
 754              	.LBE12:
 504:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 755              		.loc 1 504 3 view .LVU192
 505:Core/Src/main.c **** 
 756              		.loc 1 505 3 view .LVU193
 757              	.LBB13:
 505:Core/Src/main.c **** 
 758              		.loc 1 505 3 view .LVU194
 759 0030 0293     		str	r3, [sp, #8]
 505:Core/Src/main.c **** 
 760              		.loc 1 505 3 view .LVU195
 761 0032 1C4A     		ldr	r2, .L51+4
 762 0034 1368     		ldr	r3, [r2]
 763 0036 23F44043 		bic	r3, r3, #49152
 764 003a 43F40043 		orr	r3, r3, #32768
 765 003e 1360     		str	r3, [r2]
 505:Core/Src/main.c **** 
 766              		.loc 1 505 3 view .LVU196
 767 0040 1368     		ldr	r3, [r2]
 768 0042 03F44043 		and	r3, r3, #49152
 769 0046 0293     		str	r3, [sp, #8]
 505:Core/Src/main.c **** 
 770              		.loc 1 505 3 view .LVU197
 771 0048 029B     		ldr	r3, [sp, #8]
 772              	.LBE13:
 505:Core/Src/main.c **** 
 773              		.loc 1 505 3 view .LVU198
 510:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 774              		.loc 1 510 3 view .LVU199
 510:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 775              		.loc 1 510 36 is_stmt 0 view .LVU200
 776 004a 0123     		movs	r3, #1
 777 004c 0893     		str	r3, [sp, #32]
 511:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 778              		.loc 1 511 3 is_stmt 1 view .LVU201
 511:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
ARM GAS  /tmp/ccqKuAuV.s 			page 47


 779              		.loc 1 511 30 is_stmt 0 view .LVU202
 780 004e 4FF48033 		mov	r3, #65536
 781 0052 0993     		str	r3, [sp, #36]
 512:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 782              		.loc 1 512 3 is_stmt 1 view .LVU203
 512:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 783              		.loc 1 512 34 is_stmt 0 view .LVU204
 784 0054 0223     		movs	r3, #2
 785 0056 0E93     		str	r3, [sp, #56]
 513:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 786              		.loc 1 513 3 is_stmt 1 view .LVU205
 513:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 787              		.loc 1 513 35 is_stmt 0 view .LVU206
 788 0058 4FF48002 		mov	r2, #4194304
 789 005c 0F92     		str	r2, [sp, #60]
 514:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 790              		.loc 1 514 3 is_stmt 1 view .LVU207
 514:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 791              		.loc 1 514 30 is_stmt 0 view .LVU208
 792 005e 1922     		movs	r2, #25
 793 0060 1092     		str	r2, [sp, #64]
 515:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 794              		.loc 1 515 3 is_stmt 1 view .LVU209
 515:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 795              		.loc 1 515 30 is_stmt 0 view .LVU210
 796 0062 A822     		movs	r2, #168
 797 0064 1192     		str	r2, [sp, #68]
 516:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 798              		.loc 1 516 3 is_stmt 1 view .LVU211
 516:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 799              		.loc 1 516 30 is_stmt 0 view .LVU212
 800 0066 1293     		str	r3, [sp, #72]
 517:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 801              		.loc 1 517 3 is_stmt 1 view .LVU213
 517:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 802              		.loc 1 517 30 is_stmt 0 view .LVU214
 803 0068 0423     		movs	r3, #4
 804 006a 1393     		str	r3, [sp, #76]
 518:Core/Src/main.c ****   {
 805              		.loc 1 518 3 is_stmt 1 view .LVU215
 518:Core/Src/main.c ****   {
 806              		.loc 1 518 7 is_stmt 0 view .LVU216
 807 006c 08A8     		add	r0, sp, #32
 808 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 809              	.LVL35:
 518:Core/Src/main.c ****   {
 810              		.loc 1 518 6 view .LVU217
 811 0072 80B9     		cbnz	r0, .L49
 525:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 812              		.loc 1 525 3 is_stmt 1 view .LVU218
 525:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 813              		.loc 1 525 31 is_stmt 0 view .LVU219
 814 0074 0F23     		movs	r3, #15
 815 0076 0393     		str	r3, [sp, #12]
 527:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 816              		.loc 1 527 3 is_stmt 1 view .LVU220
 527:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
ARM GAS  /tmp/ccqKuAuV.s 			page 48


 817              		.loc 1 527 34 is_stmt 0 view .LVU221
 818 0078 0221     		movs	r1, #2
 819 007a 0491     		str	r1, [sp, #16]
 528:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 820              		.loc 1 528 3 is_stmt 1 view .LVU222
 528:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 821              		.loc 1 528 35 is_stmt 0 view .LVU223
 822 007c 0023     		movs	r3, #0
 823 007e 0593     		str	r3, [sp, #20]
 529:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 824              		.loc 1 529 3 is_stmt 1 view .LVU224
 529:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 825              		.loc 1 529 36 is_stmt 0 view .LVU225
 826 0080 4FF48052 		mov	r2, #4096
 827 0084 0692     		str	r2, [sp, #24]
 530:Core/Src/main.c **** 
 828              		.loc 1 530 3 is_stmt 1 view .LVU226
 530:Core/Src/main.c **** 
 829              		.loc 1 530 36 is_stmt 0 view .LVU227
 830 0086 0793     		str	r3, [sp, #28]
 532:Core/Src/main.c ****   {
 831              		.loc 1 532 3 is_stmt 1 view .LVU228
 532:Core/Src/main.c ****   {
 832              		.loc 1 532 7 is_stmt 0 view .LVU229
 833 0088 03A8     		add	r0, sp, #12
 834 008a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 835              	.LVL36:
 532:Core/Src/main.c ****   {
 836              		.loc 1 532 6 view .LVU230
 837 008e 20B9     		cbnz	r0, .L50
 536:Core/Src/main.c **** 
 838              		.loc 1 536 1 view .LVU231
 839 0090 15B0     		add	sp, sp, #84
 840              	.LCFI20:
 841              		.cfi_remember_state
 842              		.cfi_def_cfa_offset 4
 843              		@ sp needed
 844 0092 5DF804FB 		ldr	pc, [sp], #4
 845              	.L49:
 846              	.LCFI21:
 847              		.cfi_restore_state
 520:Core/Src/main.c ****   }
 848              		.loc 1 520 5 is_stmt 1 view .LVU232
 849 0096 FFF7FEFF 		bl	Error_Handler
 850              	.LVL37:
 851              	.L50:
 534:Core/Src/main.c ****   }
 852              		.loc 1 534 5 view .LVU233
 853 009a FFF7FEFF 		bl	Error_Handler
 854              	.LVL38:
 855              	.L52:
 856 009e 00BF     		.align	2
 857              	.L51:
 858 00a0 00380240 		.word	1073887232
 859 00a4 00700040 		.word	1073770496
 860              		.cfi_endproc
 861              	.LFE256:
ARM GAS  /tmp/ccqKuAuV.s 			page 49


 863              		.section	.text.main,"ax",%progbits
 864              		.align	1
 865              		.global	main
 866              		.syntax unified
 867              		.thumb
 868              		.thumb_func
 870              	main:
 871              	.LFB255:
 446:Core/Src/main.c **** 
 872              		.loc 1 446 1 view -0
 873              		.cfi_startproc
 874              		@ Volatile: function does not return.
 875              		@ args = 0, pretend = 0, frame = 0
 876              		@ frame_needed = 0, uses_anonymous_args = 0
 877 0000 00B5     		push	{lr}
 878              	.LCFI22:
 879              		.cfi_def_cfa_offset 4
 880              		.cfi_offset 14, -4
 881 0002 83B0     		sub	sp, sp, #12
 882              	.LCFI23:
 883              		.cfi_def_cfa_offset 16
 455:Core/Src/main.c **** 
 884              		.loc 1 455 3 view .LVU235
 885 0004 FFF7FEFF 		bl	HAL_Init
 886              	.LVL39:
 462:Core/Src/main.c **** 
 887              		.loc 1 462 3 view .LVU236
 888 0008 FFF7FEFF 		bl	SystemClock_Config
 889              	.LVL40:
 469:Core/Src/main.c ****   MX_DMA_Init();
 890              		.loc 1 469 3 view .LVU237
 891 000c FFF7FEFF 		bl	MX_GPIO_Init
 892              	.LVL41:
 470:Core/Src/main.c ****   MX_ADC1_Init();
 893              		.loc 1 470 3 view .LVU238
 894 0010 FFF7FEFF 		bl	MX_DMA_Init
 895              	.LVL42:
 471:Core/Src/main.c ****   MX_TIM2_Init();
 896              		.loc 1 471 3 view .LVU239
 897 0014 FFF7FEFF 		bl	MX_ADC1_Init
 898              	.LVL43:
 472:Core/Src/main.c ****   MX_USART1_UART_Init();
 899              		.loc 1 472 3 view .LVU240
 900 0018 FFF7FEFF 		bl	MX_TIM2_Init
 901              	.LVL44:
 473:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 902              		.loc 1 473 3 view .LVU241
 903 001c FFF7FEFF 		bl	MX_USART1_UART_Init
 904              	.LVL45:
 476:Core/Src/main.c ****   arm_rfft_fast_init_f32(&S_RFFT, BUFFER_SIZE);
 905              		.loc 1 476 3 view .LVU242
 906 0020 4FF40064 		mov	r4, #2048
 907 0024 0094     		str	r4, [sp]
 908 0026 0A4B     		ldr	r3, .L56
 909 0028 0A4A     		ldr	r2, .L56+4
 910 002a 40F23711 		movw	r1, #311
 911 002e 0A48     		ldr	r0, .L56+8
ARM GAS  /tmp/ccqKuAuV.s 			page 50


 912 0030 FFF7FEFF 		bl	arm_fir_init_f32
 913              	.LVL46:
 477:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim2);
 914              		.loc 1 477 3 view .LVU243
 915 0034 2146     		mov	r1, r4
 916 0036 0948     		ldr	r0, .L56+12
 917 0038 FFF7FEFF 		bl	arm_rfft_fast_init_f32
 918              	.LVL47:
 478:Core/Src/main.c ****   HAL_ADC_Start_DMA(&hadc1, (uint32_t*)adcBuffer, BUFFER_SIZE);
 919              		.loc 1 478 3 view .LVU244
 920 003c 0848     		ldr	r0, .L56+16
 921 003e FFF7FEFF 		bl	HAL_TIM_Base_Start
 922              	.LVL48:
 479:Core/Src/main.c ****   /* USER CODE END 2 */
 923              		.loc 1 479 3 view .LVU245
 924 0042 2246     		mov	r2, r4
 925 0044 0749     		ldr	r1, .L56+20
 926 0046 0848     		ldr	r0, .L56+24
 927 0048 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 928              	.LVL49:
 929              	.L54:
 484:Core/Src/main.c ****   {
 930              		.loc 1 484 3 discriminator 1 view .LVU246
 489:Core/Src/main.c ****   /* USER CODE END 3 */
 931              		.loc 1 489 3 discriminator 1 view .LVU247
 484:Core/Src/main.c ****   {
 932              		.loc 1 484 9 discriminator 1 view .LVU248
 933 004c FEE7     		b	.L54
 934              	.L57:
 935 004e 00BF     		.align	2
 936              	.L56:
 937 0050 00000000 		.word	firStateF32
 938 0054 00000000 		.word	firCoeffs32
 939 0058 00000000 		.word	S
 940 005c 00000000 		.word	S_RFFT
 941 0060 00000000 		.word	htim2
 942 0064 00000000 		.word	adcBuffer
 943 0068 00000000 		.word	hadc1
 944              		.cfi_endproc
 945              	.LFE255:
 947              		.global	huart1
 948              		.section	.bss.huart1,"aw",%nobits
 949              		.align	2
 952              	huart1:
 953 0000 00000000 		.space	120
 953      00000000 
 953      00000000 
 953      00000000 
 953      00000000 
 954              		.global	htim2
 955              		.section	.bss.htim2,"aw",%nobits
 956              		.align	2
 959              	htim2:
 960 0000 00000000 		.space	180
 960      00000000 
 960      00000000 
 960      00000000 
ARM GAS  /tmp/ccqKuAuV.s 			page 51


 960      00000000 
 961              		.global	hdma_adc1
 962              		.section	.bss.hdma_adc1,"aw",%nobits
 963              		.align	2
 966              	hdma_adc1:
 967 0000 00000000 		.space	96
 967      00000000 
 967      00000000 
 967      00000000 
 967      00000000 
 968              		.global	hadc1
 969              		.section	.bss.hadc1,"aw",%nobits
 970              		.align	2
 973              	hadc1:
 974 0000 00000000 		.space	100
 974      00000000 
 974      00000000 
 974      00000000 
 974      00000000 
 975              		.section	.data.firCoeffs32,"aw"
 976              		.align	2
 979              	firCoeffs32:
 980 0000 D5E855B8 		.word	-1202329387
 981 0004 6AF72BB8 		.word	-1205078166
 982 0008 FF0502B8 		.word	-1207826945
 983 000c 2829B0B7 		.word	-1213191896
 984 0010 A48C38B7 		.word	-1221030748
 985 0014 00000000 		.word	0
 986 0018 A48C3837 		.word	926452900
 987 001c 20F0C037 		.word	935391264
 988 0020 F7CC1238 		.word	940756215
 989 0024 DE214538 		.word	944054750
 990 0028 40DA7F38 		.word	947903040
 991 002c 73309B38 		.word	949694579
 992 0030 A48CB838 		.word	951618724
 993 0034 B401D838 		.word	953680308
 994 0038 A38FF938 		.word	955879331
 995 003c C98E0D39 		.word	957189833
 996 0040 30621F39 		.word	958358064
 997 0044 98353139 		.word	959526296
 998 0048 FF084339 		.word	960694527
 999 004c 45F55639 		.word	962000197
 1000 0050 1BD56939 		.word	963237147
 1001 0054 61C17D39 		.word	964542817
 1002 0058 0B5D8939 		.word	965303563
 1003 005c 2E539339 		.word	965956398
 1004 0060 89CF9D39 		.word	966643593
 1005 0064 ACC5A739 		.word	967296428
 1006 0068 0742B239 		.word	967983623
 1007 006c 2A38BC39 		.word	968636458
 1008 0070 4D2EC639 		.word	969289293
 1009 0074 389ECF39 		.word	969907768
 1010 0078 EC87D839 		.word	970491884
 1011 007c 68EBE039 		.word	971041640
 1012 0080 ACC8E839 		.word	971557036
 1013 0084 B81FF039 		.word	972038072
 1014 0088 556AF639 		.word	972450389
ARM GAS  /tmp/ccqKuAuV.s 			page 52


 1015 008c BA2EFC39 		.word	972828346
 1016 0090 3C30003A 		.word	973090876
 1017 0094 FF05023A 		.word	973211135
 1018 0098 53CF023A 		.word	973262675
 1019 009c 6F12033A 		.word	973279855
 1020 00a0 53CF023A 		.word	973262675
 1021 00a4 C77F013A 		.word	973176775
 1022 00a8 D1CDFE39 		.word	973000145
 1023 00ac 3483F839 		.word	972587828
 1024 00b0 B81FF039 		.word	972038072
 1025 00b4 9529E639 		.word	971385237
 1026 00b8 5B94D939 		.word	970560603
 1027 00bc 7A6CCB39 		.word	969632890
 1028 00c0 4B1FBA39 		.word	968499019
 1029 00c4 753FA739 		.word	967262069
 1030 00c8 503A9139 		.word	965818960
 1031 00cc 97387239 		.word	963786903
 1032 00d0 D1CA3D39 		.word	960350929
 1033 00d4 6F120339 		.word	956502639
 1034 00d8 9C508838 		.word	948457628
 1035 00dc 00000080 		.word	-2147483648
 1036 00e0 F7CC92B8 		.word	-1198338825
 1037 00e4 B5FE16B9 		.word	-1189675339
 1038 00e8 1BD569B9 		.word	-1184246501
 1039 00ec A06EA0B9 		.word	-1180668256
 1040 00f0 910BCEB9 		.word	-1177678959
 1041 00f4 61C1FDB9 		.word	-1174552223
 1042 00f8 08C817BA 		.word	-1172846584
 1043 00fc B37831BA 		.word	-1171162957
 1044 0100 B2F24BBA 		.word	-1169427790
 1045 0104 E9F266BA 		.word	-1167658263
 1046 0108 395E81BA 		.word	-1165926855
 1047 010c 1A868FBA 		.word	-1164999142
 1048 0110 FBAD9DBA 		.word	-1164071429
 1049 0114 F818ACBA 		.word	-1163126536
 1050 0118 6762BABA 		.word	-1162190233
 1051 011c 64CDC8BA 		.word	-1161245340
 1052 0120 45F5D6BA 		.word	-1160317627
 1053 0124 0ADAE4BA 		.word	-1159407094
 1054 0128 419DF2BA 		.word	-1158505151
 1055 012c 40DAFFBA 		.word	-1157637568
 1056 0130 844806BB 		.word	-1157216124
 1057 0134 CC600CBB 		.word	-1156816692
 1058 0138 312512BB 		.word	-1156438735
 1059 013c EC8417BB 		.word	-1156086548
 1060 0140 376F1CBB 		.word	-1155764425
 1061 0144 4AD320BB 		.word	-1155476662
 1062 0148 25B124BB 		.word	-1155223259
 1063 014c 01F827BB 		.word	-1155008511
 1064 0150 18972ABB 		.word	-1154836712
 1065 0154 A27D2CBB 		.word	-1154712158
 1066 0158 9FAB2DBB 		.word	-1154634849
 1067 015c 82FF2DBB 		.word	-1154613374
 1068 0160 118A2DBB 		.word	-1154643439
 1069 0164 BF292CBB 		.word	-1154733633
 1070 0168 8BDE29BB 		.word	-1154883957
 1071 016c E88626BB 		.word	-1155103000
ARM GAS  /tmp/ccqKuAuV.s 			page 53


 1072 0170 9C3322BB 		.word	-1155386468
 1073 0174 E1D31CBB 		.word	-1155738655
 1074 0178 EF5616BB 		.word	-1156163857
 1075 017c C7BC0EBB 		.word	-1156662073
 1076 0180 680506BB 		.word	-1157233304
 1077 0184 8A1EF8BA 		.word	-1158144374
 1078 0188 BBB4E1BA 		.word	-1159613253
 1079 018c 8010C9BA 		.word	-1161228160
 1080 0190 2DCDADBA 		.word	-1163014867
 1081 0194 520C90BA 		.word	-1164964782
 1082 0198 DC9B5FBA 		.word	-1168139300
 1083 019c 03241ABA 		.word	-1172691965
 1084 01a0 F9DB9EB9 		.word	-1180771335
 1085 01a4 00000000 		.word	0
 1086 01a8 1CD2A839 		.word	967365148
 1087 01ac 2DCD2D3A 		.word	976080173
 1088 01b0 A1F4853A 		.word	981857441
 1089 01b4 A65EB73A 		.word	985095846
 1090 01b8 1903EB3A 		.word	988480281
 1091 01bc FC70103B 		.word	990933244
 1092 01c0 DB6C2C3B 		.word	992767195
 1093 01c4 6364493B 		.word	994665571
 1094 01c8 9357673B 		.word	996628371
 1095 01cc D21A833B 		.word	998447826
 1096 01d0 E8F6923B 		.word	999487208
 1097 01d4 A837A33B 		.word	1000552360
 1098 01d8 AED4B33B 		.word	1001641134
 1099 01dc 34BDC43B 		.word	1002749236
 1100 01e0 9CF9D53B 		.word	1003878812
 1101 01e4 BD70E73B 		.word	1005023421
 1102 01e8 331AF93B 		.word	1006180915
 1103 01ec CD76053C 		.word	1006991053
 1104 01f0 166D0E3C 		.word	1007578390
 1105 01f4 F46F173C 		.word	1008168948
 1106 01f8 0377203C 		.word	1008760579
 1107 01fc E179293C 		.word	1009351137
 1108 0200 5C74323C 		.word	1009939548
 1109 0204 0F5E3B3C 		.word	1010523663
 1110 0208 FC36443C 		.word	1011103484
 1111 020c 8CF24C3C 		.word	1011675788
 1112 0210 8F8C553C 		.word	1012239503
 1113 0214 D2005E3C 		.word	1012793554
 1114 0218 C042663C 		.word	1013334720
 1115 021c 8A566E3C 		.word	1013864074
 1116 0220 9D2F763C 		.word	1014378397
 1117 0224 93C57D3C 		.word	1014875539
 1118 0228 508E823C 		.word	1015189072
 1119 022c FD11863C 		.word	1015419389
 1120 0230 D26D893C 		.word	1015639506
 1121 0234 CFA18C3C 		.word	1015849423
 1122 0238 8FA58F3C 		.word	1016046991
 1123 023c 2D7B923C 		.word	1016232749
 1124 0240 8E20953C 		.word	1016406158
 1125 0244 698F973C 		.word	1016565609
 1126 0248 EFCB993C 		.word	1016712175
 1127 024c D5CF9B3C 		.word	1016844245
 1128 0250 03999D3C 		.word	1016961283
ARM GAS  /tmp/ccqKuAuV.s 			page 54


 1129 0254 91299F3C 		.word	1017063825
 1130 0258 677FA03C 		.word	1017151335
 1131 025c 6C98A13C 		.word	1017223276
 1132 0260 8672A23C 		.word	1017279110
 1133 0264 D00FA33C 		.word	1017319376
 1134 0268 2F6EA33C 		.word	1017343535
 1135 026c A48DA33C 		.word	1017351588
 1136 0270 2F6EA33C 		.word	1017343535
 1137 0274 D00FA33C 		.word	1017319376
 1138 0278 8672A23C 		.word	1017279110
 1139 027c 6C98A13C 		.word	1017223276
 1140 0280 677FA03C 		.word	1017151335
 1141 0284 91299F3C 		.word	1017063825
 1142 0288 03999D3C 		.word	1016961283
 1143 028c D5CF9B3C 		.word	1016844245
 1144 0290 EFCB993C 		.word	1016712175
 1145 0294 698F973C 		.word	1016565609
 1146 0298 8E20953C 		.word	1016406158
 1147 029c 2D7B923C 		.word	1016232749
 1148 02a0 8FA58F3C 		.word	1016046991
 1149 02a4 CFA18C3C 		.word	1015849423
 1150 02a8 D26D893C 		.word	1015639506
 1151 02ac FD11863C 		.word	1015419389
 1152 02b0 508E823C 		.word	1015189072
 1153 02b4 93C57D3C 		.word	1014875539
 1154 02b8 9D2F763C 		.word	1014378397
 1155 02bc 8A566E3C 		.word	1013864074
 1156 02c0 C042663C 		.word	1013334720
 1157 02c4 D2005E3C 		.word	1012793554
 1158 02c8 8F8C553C 		.word	1012239503
 1159 02cc 8CF24C3C 		.word	1011675788
 1160 02d0 FC36443C 		.word	1011103484
 1161 02d4 0F5E3B3C 		.word	1010523663
 1162 02d8 5C74323C 		.word	1009939548
 1163 02dc E179293C 		.word	1009351137
 1164 02e0 0377203C 		.word	1008760579
 1165 02e4 F46F173C 		.word	1008168948
 1166 02e8 166D0E3C 		.word	1007578390
 1167 02ec CD76053C 		.word	1006991053
 1168 02f0 331AF93B 		.word	1006180915
 1169 02f4 BD70E73B 		.word	1005023421
 1170 02f8 9CF9D53B 		.word	1003878812
 1171 02fc 34BDC43B 		.word	1002749236
 1172 0300 AED4B33B 		.word	1001641134
 1173 0304 A837A33B 		.word	1000552360
 1174 0308 E8F6923B 		.word	999487208
 1175 030c D21A833B 		.word	998447826
 1176 0310 9357673B 		.word	996628371
 1177 0314 6364493B 		.word	994665571
 1178 0318 DB6C2C3B 		.word	992767195
 1179 031c FC70103B 		.word	990933244
 1180 0320 1903EB3A 		.word	988480281
 1181 0324 A65EB73A 		.word	985095846
 1182 0328 A1F4853A 		.word	981857441
 1183 032c 2DCD2D3A 		.word	976080173
 1184 0330 1CD2A839 		.word	967365148
 1185 0334 00000000 		.word	0
ARM GAS  /tmp/ccqKuAuV.s 			page 55


 1186 0338 F9DB9EB9 		.word	-1180771335
 1187 033c 03241ABA 		.word	-1172691965
 1188 0340 DC9B5FBA 		.word	-1168139300
 1189 0344 520C90BA 		.word	-1164964782
 1190 0348 2DCDADBA 		.word	-1163014867
 1191 034c 8010C9BA 		.word	-1161228160
 1192 0350 BBB4E1BA 		.word	-1159613253
 1193 0354 8A1EF8BA 		.word	-1158144374
 1194 0358 680506BB 		.word	-1157233304
 1195 035c C7BC0EBB 		.word	-1156662073
 1196 0360 EF5616BB 		.word	-1156163857
 1197 0364 E1D31CBB 		.word	-1155738655
 1198 0368 9C3322BB 		.word	-1155386468
 1199 036c E88626BB 		.word	-1155103000
 1200 0370 8BDE29BB 		.word	-1154883957
 1201 0374 BF292CBB 		.word	-1154733633
 1202 0378 118A2DBB 		.word	-1154643439
 1203 037c 82FF2DBB 		.word	-1154613374
 1204 0380 9FAB2DBB 		.word	-1154634849
 1205 0384 A27D2CBB 		.word	-1154712158
 1206 0388 18972ABB 		.word	-1154836712
 1207 038c 01F827BB 		.word	-1155008511
 1208 0390 25B124BB 		.word	-1155223259
 1209 0394 4AD320BB 		.word	-1155476662
 1210 0398 376F1CBB 		.word	-1155764425
 1211 039c EC8417BB 		.word	-1156086548
 1212 03a0 312512BB 		.word	-1156438735
 1213 03a4 CC600CBB 		.word	-1156816692
 1214 03a8 844806BB 		.word	-1157216124
 1215 03ac 40DAFFBA 		.word	-1157637568
 1216 03b0 419DF2BA 		.word	-1158505151
 1217 03b4 0ADAE4BA 		.word	-1159407094
 1218 03b8 45F5D6BA 		.word	-1160317627
 1219 03bc 64CDC8BA 		.word	-1161245340
 1220 03c0 6762BABA 		.word	-1162190233
 1221 03c4 F818ACBA 		.word	-1163126536
 1222 03c8 FBAD9DBA 		.word	-1164071429
 1223 03cc 1A868FBA 		.word	-1164999142
 1224 03d0 395E81BA 		.word	-1165926855
 1225 03d4 E9F266BA 		.word	-1167658263
 1226 03d8 B2F24BBA 		.word	-1169427790
 1227 03dc B37831BA 		.word	-1171162957
 1228 03e0 08C817BA 		.word	-1172846584
 1229 03e4 61C1FDB9 		.word	-1174552223
 1230 03e8 910BCEB9 		.word	-1177678959
 1231 03ec A06EA0B9 		.word	-1180668256
 1232 03f0 1BD569B9 		.word	-1184246501
 1233 03f4 B5FE16B9 		.word	-1189675339
 1234 03f8 F7CC92B8 		.word	-1198338825
 1235 03fc 00000080 		.word	-2147483648
 1236 0400 9C508838 		.word	948457628
 1237 0404 6F120339 		.word	956502639
 1238 0408 D1CA3D39 		.word	960350929
 1239 040c 97387239 		.word	963786903
 1240 0410 503A9139 		.word	965818960
 1241 0414 753FA739 		.word	967262069
 1242 0418 4B1FBA39 		.word	968499019
ARM GAS  /tmp/ccqKuAuV.s 			page 56


 1243 041c 7A6CCB39 		.word	969632890
 1244 0420 5B94D939 		.word	970560603
 1245 0424 9529E639 		.word	971385237
 1246 0428 B81FF039 		.word	972038072
 1247 042c 3483F839 		.word	972587828
 1248 0430 D1CDFE39 		.word	973000145
 1249 0434 C77F013A 		.word	973176775
 1250 0438 53CF023A 		.word	973262675
 1251 043c 6F12033A 		.word	973279855
 1252 0440 53CF023A 		.word	973262675
 1253 0444 FF05023A 		.word	973211135
 1254 0448 3C30003A 		.word	973090876
 1255 044c BA2EFC39 		.word	972828346
 1256 0450 556AF639 		.word	972450389
 1257 0454 B81FF039 		.word	972038072
 1258 0458 ACC8E839 		.word	971557036
 1259 045c 68EBE039 		.word	971041640
 1260 0460 EC87D839 		.word	970491884
 1261 0464 389ECF39 		.word	969907768
 1262 0468 4D2EC639 		.word	969289293
 1263 046c 2A38BC39 		.word	968636458
 1264 0470 0742B239 		.word	967983623
 1265 0474 ACC5A739 		.word	967296428
 1266 0478 89CF9D39 		.word	966643593
 1267 047c 2E539339 		.word	965956398
 1268 0480 0B5D8939 		.word	965303563
 1269 0484 61C17D39 		.word	964542817
 1270 0488 1BD56939 		.word	963237147
 1271 048c 45F55639 		.word	962000197
 1272 0490 FF084339 		.word	960694527
 1273 0494 98353139 		.word	959526296
 1274 0498 30621F39 		.word	958358064
 1275 049c C98E0D39 		.word	957189833
 1276 04a0 A38FF938 		.word	955879331
 1277 04a4 B401D838 		.word	953680308
 1278 04a8 A48CB838 		.word	951618724
 1279 04ac 73309B38 		.word	949694579
 1280 04b0 40DA7F38 		.word	947903040
 1281 04b4 DE214538 		.word	944054750
 1282 04b8 F7CC1238 		.word	940756215
 1283 04bc 20F0C037 		.word	935391264
 1284 04c0 A48C3837 		.word	926452900
 1285 04c4 00000000 		.word	0
 1286 04c8 A48C38B7 		.word	-1221030748
 1287 04cc 2829B0B7 		.word	-1213191896
 1288 04d0 FF0502B8 		.word	-1207826945
 1289 04d4 6AF72BB8 		.word	-1205078166
 1290 04d8 D5E855B8 		.word	-1202329387
 1291              		.global	S_RFFT
 1292              		.section	.bss.S_RFFT,"aw",%nobits
 1293              		.align	2
 1296              	S_RFFT:
 1297 0000 00000000 		.space	24
 1297      00000000 
 1297      00000000 
 1297      00000000 
 1297      00000000 
ARM GAS  /tmp/ccqKuAuV.s 			page 57


 1298              		.global	S
 1299              		.section	.bss.S,"aw",%nobits
 1300              		.align	2
 1303              	S:
 1304 0000 00000000 		.space	12
 1304      00000000 
 1304      00000000 
 1305              		.section	.bss.fftMag,"aw",%nobits
 1306              		.align	2
 1309              	fftMag:
 1310 0000 00000000 		.space	4096
 1310      00000000 
 1310      00000000 
 1310      00000000 
 1310      00000000 
 1311              		.section	.bss.fftOutput,"aw",%nobits
 1312              		.align	2
 1315              	fftOutput:
 1316 0000 00000000 		.space	8192
 1316      00000000 
 1316      00000000 
 1316      00000000 
 1316      00000000 
 1317              		.section	.bss.firStateF32,"aw",%nobits
 1318              		.align	2
 1321              	firStateF32:
 1322 0000 00000000 		.space	9432
 1322      00000000 
 1322      00000000 
 1322      00000000 
 1322      00000000 
 1323              		.section	.bss.outputF32,"aw",%nobits
 1324              		.align	2
 1327              	outputF32:
 1328 0000 00000000 		.space	8192
 1328      00000000 
 1328      00000000 
 1328      00000000 
 1328      00000000 
 1329              		.section	.bss.inputF32,"aw",%nobits
 1330              		.align	2
 1333              	inputF32:
 1334 0000 00000000 		.space	8192
 1334      00000000 
 1334      00000000 
 1334      00000000 
 1334      00000000 
 1335              		.global	adcBuffer
 1336              		.section	.bss.adcBuffer,"aw",%nobits
 1337              		.align	2
 1340              	adcBuffer:
 1341 0000 00000000 		.space	4096
 1341      00000000 
 1341      00000000 
 1341      00000000 
 1341      00000000 
 1342              		.text
ARM GAS  /tmp/ccqKuAuV.s 			page 58


 1343              	.Letext0:
 1344              		.file 3 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xc.h"
 1345              		.file 4 "/nix/store/i3m8xrhhnb7l83cpwdd9rlkcglpnxkw8-gcc-arm-embedded-12.3.rel1/arm-none-eabi/incl
 1346              		.file 5 "/nix/store/i3m8xrhhnb7l83cpwdd9rlkcglpnxkw8-gcc-arm-embedded-12.3.rel1/arm-none-eabi/incl
 1347              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1348              		.file 7 "/nix/store/i3m8xrhhnb7l83cpwdd9rlkcglpnxkw8-gcc-arm-embedded-12.3.rel1/lib/gcc/arm-none-e
 1349              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1350              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1351              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1352              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1353              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 1354              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1355              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1356              		.file 15 "Core/Inc/arm_math.h"
 1357              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 1358              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 1359              		.file 18 "/nix/store/i3m8xrhhnb7l83cpwdd9rlkcglpnxkw8-gcc-arm-embedded-12.3.rel1/arm-none-eabi/inc
 1360              		.file 19 "<built-in>"
 1361              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccqKuAuV.s 			page 59


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccqKuAuV.s:21     .text.MX_GPIO_Init:00000000 $t
     /tmp/ccqKuAuV.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
     /tmp/ccqKuAuV.s:95     .text.MX_GPIO_Init:00000048 $d
     /tmp/ccqKuAuV.s:100    .text.MX_DMA_Init:00000000 $t
     /tmp/ccqKuAuV.s:105    .text.MX_DMA_Init:00000000 MX_DMA_Init
     /tmp/ccqKuAuV.s:154    .text.MX_DMA_Init:00000030 $d
     /tmp/ccqKuAuV.s:159    .rodata.processData.str1.4:00000000 $d
     /tmp/ccqKuAuV.s:164    .text.processData:00000000 $t
     /tmp/ccqKuAuV.s:170    .text.processData:00000000 processData
     /tmp/ccqKuAuV.s:326    .text.processData:000000d0 $d
     /tmp/ccqKuAuV.s:1340   .bss.adcBuffer:00000000 adcBuffer
     /tmp/ccqKuAuV.s:1333   .bss.inputF32:00000000 inputF32
     /tmp/ccqKuAuV.s:1327   .bss.outputF32:00000000 outputF32
     /tmp/ccqKuAuV.s:1303   .bss.S:00000000 S
     /tmp/ccqKuAuV.s:1315   .bss.fftOutput:00000000 fftOutput
     /tmp/ccqKuAuV.s:1296   .bss.S_RFFT:00000000 S_RFFT
     /tmp/ccqKuAuV.s:1309   .bss.fftMag:00000000 fftMag
     /tmp/ccqKuAuV.s:952    .bss.huart1:00000000 huart1
     /tmp/ccqKuAuV.s:340    .text.HAL_ADC_ConvCpltCallback:00000000 $t
     /tmp/ccqKuAuV.s:346    .text.HAL_ADC_ConvCpltCallback:00000000 HAL_ADC_ConvCpltCallback
     /tmp/ccqKuAuV.s:368    .text.Error_Handler:00000000 $t
     /tmp/ccqKuAuV.s:374    .text.Error_Handler:00000000 Error_Handler
     /tmp/ccqKuAuV.s:406    .text.MX_ADC1_Init:00000000 $t
     /tmp/ccqKuAuV.s:411    .text.MX_ADC1_Init:00000000 MX_ADC1_Init
     /tmp/ccqKuAuV.s:519    .text.MX_ADC1_Init:00000068 $d
     /tmp/ccqKuAuV.s:973    .bss.hadc1:00000000 hadc1
     /tmp/ccqKuAuV.s:525    .text.MX_TIM2_Init:00000000 $t
     /tmp/ccqKuAuV.s:530    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
     /tmp/ccqKuAuV.s:634    .text.MX_TIM2_Init:00000064 $d
     /tmp/ccqKuAuV.s:959    .bss.htim2:00000000 htim2
     /tmp/ccqKuAuV.s:639    .text.MX_USART1_UART_Init:00000000 $t
     /tmp/ccqKuAuV.s:644    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
     /tmp/ccqKuAuV.s:699    .text.MX_USART1_UART_Init:0000002c $d
     /tmp/ccqKuAuV.s:705    .text.SystemClock_Config:00000000 $t
     /tmp/ccqKuAuV.s:711    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccqKuAuV.s:858    .text.SystemClock_Config:000000a0 $d
     /tmp/ccqKuAuV.s:864    .text.main:00000000 $t
     /tmp/ccqKuAuV.s:870    .text.main:00000000 main
     /tmp/ccqKuAuV.s:937    .text.main:00000050 $d
     /tmp/ccqKuAuV.s:1321   .bss.firStateF32:00000000 firStateF32
     /tmp/ccqKuAuV.s:979    .data.firCoeffs32:00000000 firCoeffs32
     /tmp/ccqKuAuV.s:949    .bss.huart1:00000000 $d
     /tmp/ccqKuAuV.s:956    .bss.htim2:00000000 $d
     /tmp/ccqKuAuV.s:966    .bss.hdma_adc1:00000000 hdma_adc1
     /tmp/ccqKuAuV.s:963    .bss.hdma_adc1:00000000 $d
     /tmp/ccqKuAuV.s:970    .bss.hadc1:00000000 $d
     /tmp/ccqKuAuV.s:976    .data.firCoeffs32:00000000 $d
     /tmp/ccqKuAuV.s:1293   .bss.S_RFFT:00000000 $d
     /tmp/ccqKuAuV.s:1300   .bss.S:00000000 $d
     /tmp/ccqKuAuV.s:1306   .bss.fftMag:00000000 $d
     /tmp/ccqKuAuV.s:1312   .bss.fftOutput:00000000 $d
     /tmp/ccqKuAuV.s:1318   .bss.firStateF32:00000000 $d
     /tmp/ccqKuAuV.s:1324   .bss.outputF32:00000000 $d
     /tmp/ccqKuAuV.s:1330   .bss.inputF32:00000000 $d
     /tmp/ccqKuAuV.s:1337   .bss.adcBuffer:00000000 $d
ARM GAS  /tmp/ccqKuAuV.s 			page 60



UNDEFINED SYMBOLS
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
__aeabi_f2d
arm_fir_f32
arm_mean_f32
arm_rfft_fast_f32
arm_cmplx_mag_f32
arm_max_f32
snprintf
strlen
HAL_UART_Transmit
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
arm_fir_init_f32
arm_rfft_fast_init_f32
HAL_TIM_Base_Start
HAL_ADC_Start_DMA

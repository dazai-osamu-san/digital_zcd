ARM GAS  /tmp/ccp71rWP.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"arm_cmplx_mag_f32.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c"
  20              		.section	.text.arm_cmplx_mag_f32,"ax",%progbits
  21              		.align	1
  22              		.global	arm_cmplx_mag_f32
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	arm_cmplx_mag_f32:
  28              	.LVL0:
  29              	.LFB121:
   1:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** /* ----------------------------------------------------------------------
   2:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  * Project:      CMSIS DSP Library
   3:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  * Title:        arm_cmplx_mag_f32.c
   4:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  * Description:  Floating-point complex magnitude
   5:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  *
   6:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  * $Date:        23 April 2021
   7:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  * $Revision:    V1.9.0
   8:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  *
   9:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  * Target Processor: Cortex-M and Cortex-A cores
  10:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  * -------------------------------------------------------------------- */
  11:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** /*
  12:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  * Copyright (C) 2010-2021 ARM Limited or its affiliates. All rights reserved.
  13:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  *
  14:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  *
  16:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  * not use this file except in compliance with the License.
  18:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  * You may obtain a copy of the License at
  19:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  *
  20:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  *
  22:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  * See the License for the specific language governing permissions and
  26:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  * limitations under the License.
  27:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  */
  28:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
  29:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** #include "dsp/complex_math_functions.h"
ARM GAS  /tmp/ccp71rWP.s 			page 2


  30:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
  31:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** /**
  32:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   @ingroup groupCmplxMath
  33:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  */
  34:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
  35:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** /**
  36:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   @defgroup cmplx_mag Complex Magnitude
  37:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
  38:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   Computes the magnitude of the elements of a complex data vector.
  39:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
  40:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   The <code>pSrc</code> points to the source data and
  41:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   <code>pDst</code> points to the where the result should be written.
  42:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   <code>numSamples</code> specifies the number of complex samples
  43:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   in the input array and the data is stored in an interleaved fashion
  44:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   (real, imag, real, imag, ...).
  45:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   The input array has a total of <code>2*numSamples</code> values;
  46:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   the output array has a total of <code>numSamples</code> values.
  47:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
  48:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   The underlying algorithm is used:
  49:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
  50:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   <pre>
  51:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   for (n = 0; n < numSamples; n++) {
  52:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****       pDst[n] = sqrt(pSrc[(2*n)+0]^2 + pSrc[(2*n)+1]^2);
  53:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   }
  54:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   </pre>
  55:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
  56:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   There are separate functions for floating-point, Q15, and Q31 data types.
  57:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  */
  58:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
  59:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** /**
  60:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   @addtogroup cmplx_mag
  61:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   @{
  62:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  */
  63:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
  64:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** /**
  65:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   @brief         Floating-point complex magnitude.
  66:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   @param[in]     pSrc        points to input vector
  67:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   @param[out]    pDst        points to output vector
  68:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   @param[in]     numSamples  number of samples in each vector
  69:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   @return        none
  70:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  */
  71:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
  72:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** #if defined(ARM_MATH_NEON) && !defined(ARM_MATH_AUTOVECTORIZE)
  73:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** #include "arm_vec_math.h"
  74:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** #endif
  75:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
  76:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** #if defined(ARM_MATH_MVEF) && !defined(ARM_MATH_AUTOVECTORIZE)
  77:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
  78:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** #include "arm_helium_utils.h"
  79:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
  80:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
  81:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** void arm_cmplx_mag_f32(
  82:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   const float32_t * pSrc,
  83:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****         float32_t * pDst,
  84:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****         uint32_t numSamples)
  85:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** {
  86:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     int32_t blockSize = numSamples;  /* loop counters */
ARM GAS  /tmp/ccp71rWP.s 			page 3


  87:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     uint32_t  blkCnt;           /* loop counters */
  88:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     f32x4x2_t vecSrc;
  89:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     f32x4_t sum;
  90:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     float32_t real, imag;                      /* Temporary variables to hold input values */
  91:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
  92:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     /* Compute 4 complex samples at a time */
  93:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     blkCnt = blockSize >> 2;
  94:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     while (blkCnt > 0U)
  95:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     {
  96:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****         q31x4_t newtonStartVec;
  97:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****         f32x4_t sumHalf, invSqrt;
  98:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
  99:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****         vecSrc = vld2q(pSrc);  
 100:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****         pSrc += 8;
 101:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****         sum = vmulq(vecSrc.val[0], vecSrc.val[0]);
 102:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****         sum = vfmaq(sum, vecSrc.val[1], vecSrc.val[1]);
 103:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 104:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****         /*
 105:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****          * inlined Fast SQRT using inverse SQRT newton-raphson method
 106:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****          */
 107:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 108:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****         /* compute initial value */
 109:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****         newtonStartVec = vdupq_n_s32(INVSQRT_MAGIC_F32) - vshrq((q31x4_t) sum, 1);
 110:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****         sumHalf = sum * 0.5f;
 111:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****         /*
 112:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****          * compute 3 x iterations
 113:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****          *
 114:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****          * The more iterations, the more accuracy.
 115:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****          * If you need to trade a bit of accuracy for more performance,
 116:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****          * you can comment out the 3rd use of the macro.
 117:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****          */
 118:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****         INVSQRT_NEWTON_MVE_F32(invSqrt, sumHalf, (f32x4_t) newtonStartVec);
 119:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****         INVSQRT_NEWTON_MVE_F32(invSqrt, sumHalf, invSqrt);
 120:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****         INVSQRT_NEWTON_MVE_F32(invSqrt, sumHalf, invSqrt);
 121:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****         /*
 122:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****          * set negative values to 0
 123:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****          */
 124:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****         invSqrt = vdupq_m(invSqrt, 0.0f, vcmpltq(invSqrt, 0.0f));
 125:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****         /*
 126:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****          * sqrt(x) = x * invSqrt(x)
 127:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****          */
 128:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****         sum = vmulq(sum, invSqrt);
 129:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****         vst1q(pDst, sum); 
 130:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****         pDst += 4;
 131:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****         /*
 132:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****          * Decrement the blockSize loop counter
 133:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****          */
 134:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****         blkCnt--;
 135:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     }
 136:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     /*
 137:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****      * tail
 138:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****      */
 139:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     blkCnt = blockSize & 3;
 140:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     while (blkCnt > 0U)
 141:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     {
 142:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****       /* C[0] = sqrt(A[0] * A[0] + A[1] * A[1]) */
 143:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   
ARM GAS  /tmp/ccp71rWP.s 			page 4


 144:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****       real = *pSrc++;
 145:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****       imag = *pSrc++;
 146:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   
 147:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****       /* store result in destination buffer. */
 148:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****       arm_sqrt_f32((real * real) + (imag * imag), pDst++);
 149:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   
 150:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****       /* Decrement loop counter */
 151:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****       blkCnt--;
 152:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     }
 153:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** }
 154:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 155:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** #else
 156:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** void arm_cmplx_mag_f32(
 157:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   const float32_t * pSrc,
 158:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****         float32_t * pDst,
 159:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****         uint32_t numSamples)
 160:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** {
  30              		.loc 1 160 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 160 1 is_stmt 0 view .LVU1
  35 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 24
  38              		.cfi_offset 3, -24
  39              		.cfi_offset 4, -20
  40              		.cfi_offset 5, -16
  41              		.cfi_offset 6, -12
  42              		.cfi_offset 7, -8
  43              		.cfi_offset 14, -4
  44 0002 0E46     		mov	r6, r1
  45 0004 1546     		mov	r5, r2
 161:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   uint32_t blkCnt;                               /* loop counter */
  46              		.loc 1 161 3 is_stmt 1 view .LVU2
 162:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   float32_t real, imag;                      /* Temporary variables to hold input values */
  47              		.loc 1 162 3 view .LVU3
 163:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 164:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** #if defined(ARM_MATH_NEON) && !defined(ARM_MATH_AUTOVECTORIZE)
 165:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 166:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   float32x4x2_t vecA;
 167:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   float32x4_t vRealA;
 168:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   float32x4_t vImagA;
 169:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   float32x4_t vMagSqA;
 170:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 171:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   float32x4x2_t vecB;
 172:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   float32x4_t vRealB;
 173:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   float32x4_t vImagB;
 174:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   float32x4_t vMagSqB;
 175:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 176:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   /* Loop unrolling: Compute 8 outputs at a time */
 177:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   blkCnt = numSamples >> 3;
 178:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 179:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   while (blkCnt > 0U)
 180:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   {
 181:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     /* out = sqrt((real * real) + (imag * imag)) */
 182:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
ARM GAS  /tmp/ccp71rWP.s 			page 5


 183:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     vecA = vld2q_f32(pSrc);
 184:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     pSrc += 8;
 185:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 186:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     vecB = vld2q_f32(pSrc);
 187:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     pSrc += 8;
 188:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 189:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     vRealA = vmulq_f32(vecA.val[0], vecA.val[0]);
 190:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     vImagA = vmulq_f32(vecA.val[1], vecA.val[1]);
 191:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     vMagSqA = vaddq_f32(vRealA, vImagA);
 192:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 193:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     vRealB = vmulq_f32(vecB.val[0], vecB.val[0]);
 194:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     vImagB = vmulq_f32(vecB.val[1], vecB.val[1]);
 195:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     vMagSqB = vaddq_f32(vRealB, vImagB);
 196:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 197:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     /* Store the result in the destination buffer. */
 198:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     vst1q_f32(pDst, __arm_vec_sqrt_f32_neon(vMagSqA));
 199:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     pDst += 4;
 200:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 201:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     vst1q_f32(pDst, __arm_vec_sqrt_f32_neon(vMagSqB));
 202:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     pDst += 4;
 203:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 204:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     /* Decrement the loop counter */
 205:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     blkCnt--;
 206:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   }
 207:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 208:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   blkCnt = numSamples & 7;
 209:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 210:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** #else
 211:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 212:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** #if defined (ARM_MATH_LOOPUNROLL) && !defined(ARM_MATH_AUTOVECTORIZE)
 213:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 214:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   /* Loop unrolling: Compute 4 outputs at a time */
 215:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   blkCnt = numSamples >> 2U;
 216:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 217:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   while (blkCnt > 0U)
 218:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   {
 219:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     /* C[0] = sqrt(A[0] * A[0] + A[1] * A[1]) */
 220:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 221:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     real = *pSrc++;
 222:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     imag = *pSrc++;
 223:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 224:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     /* store result in destination buffer. */
 225:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     arm_sqrt_f32((real * real) + (imag * imag), pDst++);
 226:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 227:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     real = *pSrc++;
 228:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     imag = *pSrc++;
 229:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     arm_sqrt_f32((real * real) + (imag * imag), pDst++);
 230:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 231:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     real = *pSrc++;
 232:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     imag = *pSrc++;
 233:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     arm_sqrt_f32((real * real) + (imag * imag), pDst++);
 234:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 235:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     real = *pSrc++;
 236:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     imag = *pSrc++;
 237:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     arm_sqrt_f32((real * real) + (imag * imag), pDst++);
 238:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 239:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     /* Decrement loop counter */
ARM GAS  /tmp/ccp71rWP.s 			page 6


 240:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     blkCnt--;
 241:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   }
 242:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 243:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   /* Loop unrolling: Compute remaining outputs */
 244:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   blkCnt = numSamples % 0x4U;
 245:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 246:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** #else
 247:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 248:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   /* Initialize blkCnt with number of samples */
 249:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   blkCnt = numSamples;
  48              		.loc 1 249 3 view .LVU4
  49              	.LVL1:
 250:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 251:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 252:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** #endif /* #if defined(ARM_MATH_NEON) */
 253:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 254:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   while (blkCnt > 0U)
  50              		.loc 1 254 3 view .LVU5
  51              		.loc 1 254 9 is_stmt 0 view .LVU6
  52 0006 04E0     		b	.L2
  53              	.LVL2:
  54              	.L8:
  55              	.LBB4:
  56              	.LBB5:
  57              		.file 2 "Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h"
   1:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** /******************************************************************************
   2:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****  * @file     fast_math_functions.h
   3:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****  * @brief    Public header file for CMSIS DSP Library
   4:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****  * @version  V1.10.0
   5:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****  * @date     08 July 2021
   6:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****  * Target Processor: Cortex-M and Cortex-A cores
   7:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****  ******************************************************************************/
   8:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** /*
   9:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****  * Copyright (c) 2010-2020 Arm Limited or its affiliates. All rights reserved.
  10:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****  *
  11:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****  * SPDX-License-Identifier: Apache-2.0
  12:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****  *
  13:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  14:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****  * not use this file except in compliance with the License.
  15:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****  * You may obtain a copy of the License at
  16:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****  *
  17:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****  * www.apache.org/licenses/LICENSE-2.0
  18:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****  *
  19:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****  * Unless required by applicable law or agreed to in writing, software
  20:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  21:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  22:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****  * See the License for the specific language governing permissions and
  23:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****  * limitations under the License.
  24:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****  */
  25:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 
  26:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****  
  27:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** #ifndef _FAST_MATH_FUNCTIONS_H_
  28:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** #define _FAST_MATH_FUNCTIONS_H_
  29:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 
  30:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** #include "arm_math_types.h"
  31:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** #include "arm_math_memory.h"
  32:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 
ARM GAS  /tmp/ccp71rWP.s 			page 7


  33:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** #include "dsp/none.h"
  34:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** #include "dsp/utils.h"
  35:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 
  36:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** #include "dsp/basic_math_functions.h"
  37:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 
  38:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 
  39:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** #ifdef   __cplusplus
  40:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** extern "C"
  41:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** {
  42:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** #endif
  43:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 
  44:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   /**
  45:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    * @brief Macros required for SINE and COSINE Fast math approximations
  46:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    */
  47:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 
  48:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** #define FAST_MATH_TABLE_SIZE  512
  49:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** #define FAST_MATH_Q31_SHIFT   (32 - 10)
  50:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** #define FAST_MATH_Q15_SHIFT   (16 - 10)
  51:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   
  52:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** #ifndef PI
  53:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   #define PI               3.14159265358979f
  54:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** #endif
  55:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 
  56:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 
  57:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** /**
  58:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****  * @defgroup groupFastMath Fast Math Functions
  59:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****  * This set of functions provides a fast approximation to sine, cosine, and square root.
  60:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****  * As compared to most of the other functions in the CMSIS math library, the fast math functions
  61:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****  * operate on individual values and not arrays.
  62:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****  * There are separate functions for Q15, Q31, and floating-point data.
  63:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****  *
  64:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****  */
  65:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 
  66:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   /**
  67:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    * @ingroup groupFastMath
  68:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    */
  69:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 
  70:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 
  71:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** /**
  72:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   @addtogroup sin
  73:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   @{
  74:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****  */
  75:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 
  76:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** /**
  77:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    * @brief  Fast approximation to the trigonometric sine function for floating-point data.
  78:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    * @param[in] x  input value in radians.
  79:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    * @return  sin(x).
  80:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    */
  81:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   float32_t arm_sin_f32(
  82:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   float32_t x);
  83:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 
  84:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 
  85:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   /**
  86:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    * @brief  Fast approximation to the trigonometric sine function for Q31 data.
  87:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    * @param[in] x  Scaled input value in radians.
  88:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    * @return  sin(x).
  89:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    */
ARM GAS  /tmp/ccp71rWP.s 			page 8


  90:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   q31_t arm_sin_q31(
  91:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   q31_t x);
  92:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 
  93:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 
  94:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   /**
  95:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    * @brief  Fast approximation to the trigonometric sine function for Q15 data.
  96:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    * @param[in] x  Scaled input value in radians.
  97:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    * @return  sin(x).
  98:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    */
  99:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   q15_t arm_sin_q15(
 100:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   q15_t x);
 101:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 
 102:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** /**
 103:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   @} end of sin group
 104:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****  */
 105:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 
 106:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** /**
 107:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   @addtogroup cos
 108:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   @{
 109:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****  */
 110:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 
 111:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   /**
 112:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    * @brief  Fast approximation to the trigonometric cosine function for floating-point data.
 113:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    * @param[in] x  input value in radians.
 114:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    * @return  cos(x).
 115:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    */
 116:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   float32_t arm_cos_f32(
 117:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   float32_t x);
 118:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 
 119:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 
 120:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   /**
 121:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    * @brief Fast approximation to the trigonometric cosine function for Q31 data.
 122:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    * @param[in] x  Scaled input value in radians.
 123:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    * @return  cos(x).
 124:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    */
 125:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   q31_t arm_cos_q31(
 126:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   q31_t x);
 127:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 
 128:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 
 129:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   /**
 130:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    * @brief  Fast approximation to the trigonometric cosine function for Q15 data.
 131:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    * @param[in] x  Scaled input value in radians.
 132:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    * @return  cos(x).
 133:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    */
 134:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   q15_t arm_cos_q15(
 135:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   q15_t x);
 136:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 
 137:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** /**
 138:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   @} end of cos group
 139:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****  */
 140:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 
 141:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 
 142:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** /**
 143:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   @brief         Floating-point vector of log values.
 144:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   @param[in]     pSrc       points to the input vector
 145:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   @param[out]    pDst       points to the output vector
 146:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   @param[in]     blockSize  number of samples in each vector
ARM GAS  /tmp/ccp71rWP.s 			page 9


 147:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   @return        none
 148:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****  */
 149:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   void arm_vlog_f32(
 150:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   const float32_t * pSrc,
 151:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****         float32_t * pDst,
 152:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****         uint32_t blockSize);
 153:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 
 154:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 
 155:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 
 156:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** /**
 157:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   @brief         Floating-point vector of log values.
 158:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   @param[in]     pSrc       points to the input vector
 159:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   @param[out]    pDst       points to the output vector
 160:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   @param[in]     blockSize  number of samples in each vector
 161:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   @return        none
 162:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****  */
 163:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   void arm_vlog_f64(
 164:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   const float64_t * pSrc,
 165:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 		float64_t * pDst,
 166:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 		uint32_t blockSize);
 167:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 
 168:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 
 169:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 
 170:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   /**
 171:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    * @brief  q31 vector of log values.
 172:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    * @param[in]     pSrc       points to the input vector in q31
 173:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    * @param[out]    pDst       points to the output vector in q5.26
 174:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    * @param[in]     blockSize  number of samples in each vector
 175:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    * @return        none
 176:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    */
 177:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   void arm_vlog_q31(const q31_t * pSrc,
 178:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****         q31_t * pDst,
 179:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****         uint32_t blockSize);
 180:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 
 181:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   /**
 182:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    * @brief  q15 vector of log values.
 183:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    * @param[in]     pSrc       points to the input vector in q15
 184:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    * @param[out]    pDst       points to the output vector in q4.11
 185:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    * @param[in]     blockSize  number of samples in each vector
 186:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    * @return        none
 187:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    */
 188:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   void arm_vlog_q15(const q15_t * pSrc,
 189:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****         q15_t * pDst,
 190:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****         uint32_t blockSize);
 191:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 
 192:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 
 193:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 
 194:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** /**
 195:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   @brief         Floating-point vector of exp values.
 196:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   @param[in]     pSrc       points to the input vector
 197:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   @param[out]    pDst       points to the output vector
 198:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   @param[in]     blockSize  number of samples in each vector
 199:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   @return        none
 200:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****  */
 201:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   void arm_vexp_f32(
 202:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   const float32_t * pSrc,
 203:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****         float32_t * pDst,
ARM GAS  /tmp/ccp71rWP.s 			page 10


 204:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****         uint32_t blockSize);
 205:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 
 206:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 
 207:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 
 208:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** /**
 209:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   @brief         Floating-point vector of exp values.
 210:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   @param[in]     pSrc       points to the input vector
 211:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   @param[out]    pDst       points to the output vector
 212:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   @param[in]     blockSize  number of samples in each vector
 213:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   @return        none
 214:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****  */
 215:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   void arm_vexp_f64(
 216:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   const float64_t * pSrc,
 217:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 		float64_t * pDst,
 218:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 		uint32_t blockSize);
 219:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 
 220:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 
 221:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 
 222:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****  /**
 223:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    * @defgroup SQRT Square Root
 224:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    *
 225:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    * Computes the square root of a number.
 226:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    * There are separate functions for Q15, Q31, and floating-point data types.
 227:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    * The square root function is computed using the Newton-Raphson algorithm.
 228:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    * This is an iterative algorithm of the form:
 229:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    * <pre>
 230:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    *      x1 = x0 - f(x0)/f'(x0)
 231:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    * </pre>
 232:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    * where <code>x1</code> is the current estimate,
 233:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    * <code>x0</code> is the previous estimate, and
 234:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    * <code>f'(x0)</code> is the derivative of <code>f()</code> evaluated at <code>x0</code>.
 235:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    * For the square root function, the algorithm reduces to:
 236:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    * <pre>
 237:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    *     x0 = in/2                         [initial guess]
 238:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    *     x1 = 1/2 * ( x0 + in / x0)        [each iteration]
 239:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    * </pre>
 240:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    */
 241:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 
 242:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 
 243:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   /**
 244:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    * @addtogroup SQRT
 245:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    * @{
 246:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****    */
 247:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 
 248:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** /**
 249:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   @brief         Floating-point square root function.
 250:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   @param[in]     in    input value
 251:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   @param[out]    pOut  square root of input value
 252:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   @return        execution status
 253:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****                    - \ref ARM_MATH_SUCCESS        : input value is positive
 254:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****                    - \ref ARM_MATH_ARGUMENT_ERROR : input value is negative; *pOut is set to 0
 255:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****  */
 256:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** __STATIC_FORCEINLINE arm_status arm_sqrt_f32(
 257:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   const float32_t in,
 258:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   float32_t * pOut)
 259:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   {
 260:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****     if (in >= 0.0f)
ARM GAS  /tmp/ccp71rWP.s 			page 11


 261:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****     {
 262:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** #if defined ( __CC_ARM )
 263:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   #if defined __TARGET_FPU_VFP
 264:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****       *pOut = __sqrtf(in);
 265:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   #else
 266:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****       *pOut = sqrtf(in);
 267:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   #endif
 268:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 
 269:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** #elif defined ( __ICCARM__ )
 270:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   #if defined __ARMVFP__
 271:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****       __ASM("VSQRT.F32 %0,%1" : "=t"(*pOut) : "t"(in));
 272:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   #else
 273:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****       *pOut = sqrtf(in);
 274:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   #endif
 275:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 
 276:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** #else
 277:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****       *pOut = sqrtf(in);
 278:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** #endif
 279:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** 
 280:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****       return (ARM_MATH_SUCCESS);
 281:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****     }
 282:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****     else
 283:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****     {
 284:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****       *pOut = 0.0f;
  58              		.loc 2 284 7 is_stmt 1 view .LVU7
  59              		.loc 2 284 13 is_stmt 0 view .LVU8
  60 0008 0023     		movs	r3, #0
  61 000a 3360     		str	r3, [r6]	@ float
  62              	.LVL3:
 285:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****       return (ARM_MATH_ARGUMENT_ERROR);
  63              		.loc 2 285 7 is_stmt 1 view .LVU9
  64              	.L5:
  65              		.loc 2 285 7 is_stmt 0 view .LVU10
  66              	.LBE5:
  67              	.LBE4:
 255:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   {
 256:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     /* C[0] = sqrt(A[0] * A[0] + A[1] * A[1]) */
 257:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 258:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     real = *pSrc++;
 259:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     imag = *pSrc++;
 260:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 261:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     /* store result in destination buffer. */
 262:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     arm_sqrt_f32((real * real) + (imag * imag), pDst++);
 263:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 264:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     /* Decrement loop counter */
 265:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     blkCnt--;
  68              		.loc 1 265 5 is_stmt 1 view .LVU11
  69              		.loc 1 265 11 is_stmt 0 view .LVU12
  70 000c 013D     		subs	r5, r5, #1
  71              	.LVL4:
 262:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
  72              		.loc 1 262 5 view .LVU13
  73 000e 3E46     		mov	r6, r7
 259:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
  74              		.loc 1 259 17 view .LVU14
  75 0010 2046     		mov	r0, r4
  76              	.LVL5:
ARM GAS  /tmp/ccp71rWP.s 			page 12


  77              	.L2:
 254:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   {
  78              		.loc 1 254 17 is_stmt 1 view .LVU15
  79 0012 B5B1     		cbz	r5, .L10
 258:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     imag = *pSrc++;
  80              		.loc 1 258 5 view .LVU16
  81              	.LVL6:
 258:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     imag = *pSrc++;
  82              		.loc 1 258 10 is_stmt 0 view .LVU17
  83 0014 0446     		mov	r4, r0
  84 0016 0834     		adds	r4, r4, #8
  85 0018 90ED000A 		vldr.32	s0, [r0]
  86              	.LVL7:
 259:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
  87              		.loc 1 259 5 is_stmt 1 view .LVU18
 259:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
  88              		.loc 1 259 10 is_stmt 0 view .LVU19
  89 001c D0ED017A 		vldr.32	s15, [r0, #4]
  90              	.LVL8:
 262:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
  91              		.loc 1 262 5 is_stmt 1 view .LVU20
 262:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
  92              		.loc 1 262 24 is_stmt 0 view .LVU21
  93 0020 20EE000A 		vmul.f32	s0, s0, s0
  94              	.LVL9:
 262:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
  95              		.loc 1 262 40 view .LVU22
  96 0024 67EEA77A 		vmul.f32	s15, s15, s15
  97              	.LVL10:
 262:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
  98              		.loc 1 262 5 view .LVU23
  99 0028 30EE270A 		vadd.f32	s0, s0, s15
 100 002c 371D     		adds	r7, r6, #4
 101              	.LVL11:
 102              	.LBB7:
 103              	.LBI4:
 256:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****   const float32_t in,
 104              		.loc 2 256 33 is_stmt 1 view .LVU24
 105              	.LBB6:
 260:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****     {
 106              		.loc 2 260 5 view .LVU25
 260:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****     {
 107              		.loc 2 260 8 is_stmt 0 view .LVU26
 108 002e B5EEC00A 		vcmpe.f32	s0, #0
 109 0032 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 110 0036 E7DB     		blt	.L8
 277:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** #endif
 111              		.loc 2 277 7 is_stmt 1 view .LVU27
 277:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** #endif
 112              		.loc 2 277 15 is_stmt 0 view .LVU28
 113 0038 FFF7FEFF 		bl	sqrtf
 114              	.LVL12:
 277:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h **** #endif
 115              		.loc 2 277 13 view .LVU29
 116 003c 86ED000A 		vstr.32	s0, [r6]
 280:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****     }
 117              		.loc 2 280 7 is_stmt 1 view .LVU30
ARM GAS  /tmp/ccp71rWP.s 			page 13


 280:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****     }
 118              		.loc 2 280 14 is_stmt 0 view .LVU31
 119 0040 E4E7     		b	.L5
 120              	.LVL13:
 121              	.L10:
 280:Drivers/CMSIS/DSP/Include/dsp/fast_math_functions.h ****     }
 122              		.loc 2 280 14 view .LVU32
 123              	.LBE6:
 124              	.LBE7:
 266:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   }
 267:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 268:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** }
 125              		.loc 1 268 1 view .LVU33
 126 0042 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 127              		.loc 1 268 1 view .LVU34
 128              		.cfi_endproc
 129              	.LFE121:
 131              		.text
 132              	.Letext0:
 133              		.file 3 "/nix/store/i3m8xrhhnb7l83cpwdd9rlkcglpnxkw8-gcc-arm-embedded-12.3.rel1/arm-none-eabi/incl
 134              		.file 4 "/nix/store/i3m8xrhhnb7l83cpwdd9rlkcglpnxkw8-gcc-arm-embedded-12.3.rel1/arm-none-eabi/incl
 135              		.file 5 "Drivers/CMSIS/DSP/Include/arm_math_types.h"
 136              		.file 6 "/nix/store/i3m8xrhhnb7l83cpwdd9rlkcglpnxkw8-gcc-arm-embedded-12.3.rel1/arm-none-eabi/incl
ARM GAS  /tmp/ccp71rWP.s 			page 14


DEFINED SYMBOLS
                            *ABS*:00000000 arm_cmplx_mag_f32.c
     /tmp/ccp71rWP.s:21     .text.arm_cmplx_mag_f32:00000000 $t
     /tmp/ccp71rWP.s:27     .text.arm_cmplx_mag_f32:00000000 arm_cmplx_mag_f32

UNDEFINED SYMBOLS
sqrtf

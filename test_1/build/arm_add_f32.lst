ARM GAS  /tmp/cchLqrud.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"arm_add_f32.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c"
  20              		.section	.text.arm_add_f32,"ax",%progbits
  21              		.align	1
  22              		.global	arm_add_f32
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	arm_add_f32:
  28              	.LVL0:
  29              	.LFB120:
   1:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** /* ----------------------------------------------------------------------
   2:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  * Project:      CMSIS DSP Library
   3:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  * Title:        arm_add_f32.c
   4:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  * Description:  Floating-point vector addition
   5:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  *
   6:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  * $Date:        23 April 2021
   7:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  * $Revision:    V1.9.0
   8:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  *
   9:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  * Target Processor: Cortex-M and Cortex-A cores
  10:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  * -------------------------------------------------------------------- */
  11:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** /*
  12:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  * Copyright (C) 2010-2021 ARM Limited or its affiliates. All rights reserved.
  13:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  *
  14:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  *
  16:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  * not use this file except in compliance with the License.
  18:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  * You may obtain a copy of the License at
  19:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  *
  20:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  *
  22:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  * See the License for the specific language governing permissions and
  26:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  * limitations under the License.
  27:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  */
  28:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
  29:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** #include "dsp/basic_math_functions.h"
ARM GAS  /tmp/cchLqrud.s 			page 2


  30:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
  31:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** /**
  32:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   @ingroup groupMath
  33:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  */
  34:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
  35:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** /**
  36:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   @defgroup BasicAdd Vector Addition
  37:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
  38:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   Element-by-element addition of two vectors.
  39:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
  40:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   <pre>
  41:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****       pDst[n] = pSrcA[n] + pSrcB[n],   0 <= n < blockSize.
  42:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   </pre>
  43:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
  44:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   There are separate functions for floating-point, Q7, Q15, and Q31 data types.
  45:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  */
  46:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
  47:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** /**
  48:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   @addtogroup BasicAdd
  49:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   @{
  50:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  */
  51:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
  52:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** /**
  53:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   @brief         Floating-point vector addition.
  54:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   @param[in]     pSrcA      points to first input vector
  55:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   @param[in]     pSrcB      points to second input vector
  56:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   @param[out]    pDst       points to output vector
  57:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   @param[in]     blockSize  number of samples in each vector
  58:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   @return        none
  59:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  */
  60:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
  61:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** #if defined(ARM_MATH_MVEF) && !defined(ARM_MATH_AUTOVECTORIZE)
  62:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
  63:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** #include "arm_helium_utils.h"
  64:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
  65:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** void arm_add_f32(
  66:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   const float32_t * pSrcA,
  67:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   const float32_t * pSrcB,
  68:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****         float32_t * pDst,
  69:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****         uint32_t blockSize)
  70:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** {
  71:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     uint32_t blkCnt;                               /* Loop counter */
  72:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
  73:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     f32x4_t vec1;
  74:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     f32x4_t vec2;
  75:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     f32x4_t res;
  76:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
  77:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     /* Compute 4 outputs at a time */
  78:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     blkCnt = blockSize >> 2U;
  79:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
  80:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     while (blkCnt > 0U)
  81:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     {
  82:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****         /* C = A + B */
  83:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
  84:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****         /* Add and then store the results in the destination buffer. */
  85:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****         vec1 = vld1q(pSrcA);
  86:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****         vec2 = vld1q(pSrcB);
ARM GAS  /tmp/cchLqrud.s 			page 3


  87:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****         res = vaddq(vec1, vec2);
  88:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****         vst1q(pDst, res);
  89:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
  90:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****         /* Increment pointers */
  91:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****         pSrcA += 4;
  92:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****         pSrcB += 4; 
  93:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****         pDst += 4;
  94:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****         
  95:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****         /* Decrement the loop counter */
  96:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****         blkCnt--;
  97:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     }
  98:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
  99:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     /* Tail */
 100:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     blkCnt = blockSize & 0x3;
 101:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
 102:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     if (blkCnt > 0U)
 103:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     {
 104:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****       /* C = A + B */
 105:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****       mve_pred16_t p0 = vctp32q(blkCnt);
 106:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****       vec1 = vld1q(pSrcA);
 107:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****       vec2 = vld1q(pSrcB);
 108:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****       vstrwq_p(pDst, vaddq(vec1,vec2), p0);
 109:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     }
 110:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
 111:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** }
 112:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
 113:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** #else
 114:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** void arm_add_f32(
 115:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   const float32_t * pSrcA,
 116:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   const float32_t * pSrcB,
 117:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****         float32_t * pDst,
 118:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****         uint32_t blockSize)
 119:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** {
  30              		.loc 1 119 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 120:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****         uint32_t blkCnt;                               /* Loop counter */
  35              		.loc 1 120 9 view .LVU1
 121:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
 122:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** #if defined(ARM_MATH_NEON) && !defined(ARM_MATH_AUTOVECTORIZE)
 123:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     f32x4_t vec1;
 124:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     f32x4_t vec2;
 125:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     f32x4_t res;
 126:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
 127:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     /* Compute 4 outputs at a time */
 128:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     blkCnt = blockSize >> 2U;
 129:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
 130:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     while (blkCnt > 0U)
 131:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     {
 132:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****         /* C = A + B */
 133:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
 134:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     	/* Add and then store the results in the destination buffer. */
 135:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****         vec1 = vld1q_f32(pSrcA);
 136:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****         vec2 = vld1q_f32(pSrcB);
 137:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****         res = vaddq_f32(vec1, vec2);
ARM GAS  /tmp/cchLqrud.s 			page 4


 138:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****         vst1q_f32(pDst, res);
 139:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
 140:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****         /* Increment pointers */
 141:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****         pSrcA += 4;
 142:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****         pSrcB += 4; 
 143:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****         pDst += 4;
 144:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****         
 145:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****         /* Decrement the loop counter */
 146:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****         blkCnt--;
 147:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     }
 148:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
 149:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     /* Tail */
 150:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     blkCnt = blockSize & 0x3;
 151:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
 152:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** #else
 153:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** #if defined (ARM_MATH_LOOPUNROLL) && !defined(ARM_MATH_AUTOVECTORIZE)
 154:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
 155:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   /* Loop unrolling: Compute 4 outputs at a time */
 156:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   blkCnt = blockSize >> 2U;
 157:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
 158:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   while (blkCnt > 0U)
 159:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   {
 160:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     /* C = A + B */
 161:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
 162:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     /* Add and store result in destination buffer. */
 163:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     *pDst++ = (*pSrcA++) + (*pSrcB++);
 164:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     *pDst++ = (*pSrcA++) + (*pSrcB++);
 165:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     *pDst++ = (*pSrcA++) + (*pSrcB++);
 166:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     *pDst++ = (*pSrcA++) + (*pSrcB++);
 167:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
 168:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     /* Decrement loop counter */
 169:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     blkCnt--;
 170:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   }
 171:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
 172:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   /* Loop unrolling: Compute remaining outputs */
 173:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   blkCnt = blockSize % 0x4U;
 174:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
 175:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** #else
 176:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
 177:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   /* Initialize blkCnt with number of samples */
 178:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   blkCnt = blockSize;
  36              		.loc 1 178 3 view .LVU2
 179:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
 180:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 181:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** #endif /* #if defined(ARM_MATH_NEON) */
 182:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
 183:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   while (blkCnt > 0U)
  37              		.loc 1 183 3 view .LVU3
  38              		.loc 1 183 9 is_stmt 0 view .LVU4
  39 0000 08E0     		b	.L2
  40              	.LVL1:
  41              	.L3:
 184:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   {
 185:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     /* C = A + B */
 186:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
 187:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     /* Add and store result in destination buffer. */
 188:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     *pDst++ = (*pSrcA++) + (*pSrcB++);
ARM GAS  /tmp/cchLqrud.s 			page 5


  42              		.loc 1 188 5 is_stmt 1 view .LVU5
  43              		.loc 1 188 16 is_stmt 0 view .LVU6
  44 0002 F0EC017A 		vldmia.32	r0!, {s15}
  45              	.LVL2:
  46              		.loc 1 188 29 view .LVU7
  47 0006 B1EC017A 		vldmia.32	r1!, {s14}
  48              	.LVL3:
  49              		.loc 1 188 26 view .LVU8
  50 000a 77EE877A 		vadd.f32	s15, s15, s14
  51              		.loc 1 188 13 view .LVU9
  52 000e E2EC017A 		vstmia.32	r2!, {s15}
  53              	.LVL4:
 189:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
 190:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     /* Decrement loop counter */
 191:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     blkCnt--;
  54              		.loc 1 191 5 is_stmt 1 view .LVU10
  55              		.loc 1 191 11 is_stmt 0 view .LVU11
  56 0012 013B     		subs	r3, r3, #1
  57              	.LVL5:
  58              	.L2:
 183:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   {
  59              		.loc 1 183 17 is_stmt 1 view .LVU12
  60 0014 002B     		cmp	r3, #0
  61 0016 F4D1     		bne	.L3
 192:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   }
 193:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
 194:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** }
  62              		.loc 1 194 1 is_stmt 0 view .LVU13
  63 0018 7047     		bx	lr
  64              		.cfi_endproc
  65              	.LFE120:
  67              		.text
  68              	.Letext0:
  69              		.file 2 "/nix/store/i3m8xrhhnb7l83cpwdd9rlkcglpnxkw8-gcc-arm-embedded-12.3.rel1/arm-none-eabi/incl
  70              		.file 3 "/nix/store/i3m8xrhhnb7l83cpwdd9rlkcglpnxkw8-gcc-arm-embedded-12.3.rel1/arm-none-eabi/incl
  71              		.file 4 "Drivers/CMSIS/DSP/Include/arm_math_types.h"
ARM GAS  /tmp/cchLqrud.s 			page 6


DEFINED SYMBOLS
                            *ABS*:00000000 arm_add_f32.c
     /tmp/cchLqrud.s:21     .text.arm_add_f32:00000000 $t
     /tmp/cchLqrud.s:27     .text.arm_add_f32:00000000 arm_add_f32

NO UNDEFINED SYMBOLS
